/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/createClass.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ \"./node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\n\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ \"./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\n\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ \"./node_modules/@babel/runtime/helpers/nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js?");

/***/ }),

/***/ "./node_modules/automation-events/build/es5/bundle.js":
/*!************************************************************!*\
  !*** ./node_modules/automation-events/build/es5/bundle.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(exports, __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/slicedToArray.js\"), __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\"), __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\")) :\n    undefined;\n}(this, function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    _slicedToArray = _slicedToArray && _slicedToArray.hasOwnProperty('default') ? _slicedToArray['default'] : _slicedToArray;\n    _classCallCheck = _classCallCheck && _classCallCheck.hasOwnProperty('default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && _createClass.hasOwnProperty('default') ? _createClass['default'] : _createClass;\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList =\n    /*#__PURE__*/\n    function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/automation-events/build/es5/bundle.js?");

/***/ }),

/***/ "./node_modules/fast-unique-numbers/build/es5/bundle.js":
/*!**************************************************************!*\
  !*** ./node_modules/fast-unique-numbers/build/es5/bundle.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n     true ? factory(exports) :\n    undefined;\n}(this, function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber > 2147483646 ? 0 : lastNumber + 1;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 31 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 31\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < 1073741824) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * 2147483648);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//# sourceURL=webpack:///./node_modules/fast-unique-numbers/build/es5/bundle.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/constants.js ***!
  \***************************************************************************/
/*! exports provided: MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOST_NEGATIVE_SINGLE_FLOAT\", function() { return MOST_NEGATIVE_SINGLE_FLOAT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOST_POSITIVE_SINGLE_FLOAT\", function() { return MOST_POSITIVE_SINGLE_FLOAT; });\nconst MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nconst MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=/build/es2018/constants.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/constants.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/event-target.js":
/*!******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/event-target.js ***!
  \******************************************************************************/
/*! exports provided: EventTarget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventTarget\", function() { return EventTarget; });\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n\nclass EventTarget {\n    constructor(_nativeEventTarget) {\n        this._nativeEventTarget = _nativeEventTarget;\n        this._listeners = new WeakMap();\n    }\n    addEventListener(type, listener, // @todo EventListenerOrEventListenerObject | null = null,\n    options) {\n        let wrappedEventListener = this._listeners.get(listener);\n        if (wrappedEventListener === undefined) {\n            wrappedEventListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_0__[\"wrapEventListener\"])(this, listener);\n            if (typeof listener === 'function') {\n                this._listeners.set(listener, wrappedEventListener);\n            }\n        }\n        return this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n    }\n    dispatchEvent(event) {\n        return this._nativeEventTarget.dispatchEvent(event);\n    }\n    removeEventListener(type, listener, // @todo EventListenerOrEventListenerObject | null = null,\n    options) {\n        const wrappedEventListener = this._listeners.get(listener);\n        return this._nativeEventTarget.removeEventListener(type, (wrappedEventListener === undefined) ? null : wrappedEventListener, options);\n    }\n}\n//# sourceMappingURL=/build/es2018/event-target.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/event-target.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/abort-error.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/abort-error.js ***!
  \***************************************************************************************/
/*! exports provided: createAbortError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAbortError\", function() { return createAbortError; });\nconst createAbortError = () => {\n    try {\n        return new DOMException('', 'AbortError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 20;\n        err.name = 'AbortError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/abort-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/abort-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/add-audio-worklet-module.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/add-audio-worklet-module.js ***!
  \****************************************************************************************************/
/*! exports provided: createAddAudioWorkletModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAddAudioWorkletModule\", function() { return createAddAudioWorkletModule; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_evaluate_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/evaluate-source */ \"./node_modules/standardized-audio-context/build/es2018/helpers/evaluate-source.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_is_constructible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/is-constructible */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-constructible.js\");\n/* harmony import */ var _helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/split-import-statements */ \"./node_modules/standardized-audio-context/build/es2018/helpers/split-import-statements.js\");\n\n\n\n\n\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!Object(_helpers_is_constructible__WEBPACK_IMPORTED_MODULE_3__[\"isConstructible\"])(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n    if (typeof processorCtor.prototype.process !== 'function') {\n        throw new TypeError('The given value for processorCtor should have a callable process() function.');\n    }\n};\nconst createAddAudioWorkletModule = (createAbortError, createNotSupportedError, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, ongoingRequests, resolvedRequests) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_2__[\"getNativeContext\"])(context);\n        const absoluteUrl = (new URL(moduleURL, location.href)).toString();\n        // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return fetchSource(moduleURL)\n                .then((source) => {\n                const [importStatements, sourceWithoutImportStatements] = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_4__[\"splitImportStatements\"])(source, absoluteUrl);\n                /*\n                 * Bug #86: Chrome Canary does not invoke the process() function if the corresponding AudioWorkletNode has no output.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     constructor (options) {\n                 *         const { hasNoOutput, ...otherParameterData } = options.parameterData;\n                 *\n                 *         if (hasNoOutput === 1) {\n                 *             super({ ...options, numberOfOutputs: 0, outputChannelCount: [ ], parameterData: otherParameterData });\n                 *\n                 *             this._hasNoOutput = true;\n                 *         } else {\n                 *             super(options);\n                 *\n                 *             this._hasNoOutput = false;\n                 *         }\n                 *     }\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         return super.process(inputs, (this._hasNoOutput) ? [ ] : outputs, parameters);\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{constructor(o){const{hasNoOutput,...q}=o.parameterData;if(hasNoOutput===1){super({...o,numberOfOutputs:0,outputChannelCount:[],parameterData:q});this._h=true}else{super(o);this._h=false}}process(i,o,p){return super.process(i,(this._h)?[]:o,p)}}))`; // tslint:disable-line:max-line-length\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                const backupNativeContext = getBackupNativeContext(nativeContext);\n                const nativeContextOrBackupNativeContext = (backupNativeContext !== null) ? backupNativeContext : nativeContext;\n                return nativeContextOrBackupNativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => URL.revokeObjectURL(url))\n                    // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                    .catch((err) => {\n                    URL.revokeObjectURL(url);\n                    throw err; // tslint:disable-line:rxjs-throw-error\n                });\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then((source) => {\n            const [importStatements, sourceWithoutImportStatements] = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_4__[\"splitImportStatements\"])(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return Object(_helpers_evaluate_source__WEBPACK_IMPORTED_MODULE_1__[\"evaluateSource\"])(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS\"].get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    _globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS\"].set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        })\n            .catch((err) => {\n            if (err.name === 'SyntaxError') {\n                throw createAbortError();\n            }\n            throw err; // tslint:disable-line:rxjs-throw-error\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .catch(() => { }) // tslint:disable-line:no-empty\n            // @todo Use finally when it becomes available in all supported browsers.\n            .then(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/add-audio-worklet-module.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/add-audio-worklet-module.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createAnalyserNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAnalyserNodeConstructor\", function() { return createAnalyserNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nconst createAnalyserNodeConstructor = (createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class AnalyserNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createAnalyserNodeRenderer()\n                : null);\n            super(context, 'passive', nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/analyser-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-renderer-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-renderer-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createAnalyserNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAnalyserNodeRendererFactory\", function() { return createAnalyserNodeRendererFactory; });\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\nconst createAnalyserNodeRendererFactory = (createNativeAnalyserNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__[\"isOwnedByContext\"])(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/analyser-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-constructor.js ***!
  \****************************************************************************************************/
/*! exports provided: createAudioBufferConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioBufferConstructor\", function() { return createAudioBufferConstructor; });\n/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js\");\n/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/test-audio-buffer-copy-channel-methods-subarray-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js\");\n\n\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nconst createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = (nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)) ?\n                new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate }) :\n                nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_2__[\"wrapAudioBufferGetChannelDataMethod\"])(audioBuffer);\n                // Bug #42: Firefox does not yet fully support copyFromChannel() and copyToChannel().\n            }\n            else if (!cacheTestResult(_helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_1__[\"testAudioBufferCopyChannelMethodsSubarraySupport\"], () => Object(_helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_1__[\"testAudioBufferCopyChannelMethodsSubarraySupport\"])(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsSubarray(audioBuffer);\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                // Bug #157: No browser does allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__[\"testAudioBufferCopyChannelMethodsOutOfBoundsSupport\"], () => Object(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__[\"testAudioBufferCopyChannelMethodsOutOfBoundsSupport\"])(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype)\n                || (audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-buffer-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-constructor.js ***!
  \****************************************************************************************************************/
/*! exports provided: createAudioBufferSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioBufferSourceNodeConstructor\", function() { return createAudioBufferSourceNodeConstructor; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js\");\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n\n\n\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nconst createAudioBufferSourceNodeConstructor = (createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class AudioBufferSourceNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline)\n                ? createAudioBufferSourceNodeRenderer()\n                : null);\n            super(context, 'passive', nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = false;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            // Bug #71: Edge does not allow to set the buffer to null.\n            try {\n                this._nativeAudioBufferSourceNode.buffer = value;\n            }\n            catch (err) {\n                if (value !== null || err.code !== 17) {\n                    throw err; // tslint:disable-line:rxjs-throw-error\n                }\n                // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n                if (this._nativeAudioBufferSourceNode.buffer !== null) {\n                    const buffer = this._nativeAudioBufferSourceNode.buffer;\n                    const numberOfChannels = buffer.numberOfChannels;\n                    for (let i = 0; i < numberOfChannels; i += 1) {\n                        buffer\n                            .getChannelData(i)\n                            .fill(0);\n                    }\n                    this._isBufferNullified = true;\n                }\n            }\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_3__[\"wrapEventListener\"])(this, value);\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = (nativeOnEnded === wrappedListener) ? value : nativeOnEnded;\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = (duration === undefined) ? [when, offset] : [when, offset, duration];\n            }\n            else {\n                Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__[\"setInternalState\"])(this, 'active');\n                const setInternalStateToInactive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', setInternalStateToInactive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__[\"setInternalState\"])(this, 'passive'), 1000);\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', setInternalStateToInactive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-buffer-source-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createAudioBufferSourceNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioBufferSourceNodeRendererFactory\", function() { return createAudioBufferSourceNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createAudioBufferSourceNodeRendererFactory = (createNativeAudioBufferSourceNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.playbackRate);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-buffer-source-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-context-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-context-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioContextConstructor\", function() { return createAudioContextConstructor; });\n/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-valid-latency-hint.js\");\n\nconst createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__[\"isValidLatencyHint\"])(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, nativeAudioContext.destination.channelCount);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency = (typeof nativeAudioContext.baseLatency === 'number')\n                ? nativeAudioContext.baseLatency\n                : (latencyHint === 'balanced')\n                    ? (512 / sampleRate)\n                    : (latencyHint === 'interactive' || latencyHint === undefined)\n                        ? (256 / sampleRate)\n                        : (latencyHint === 'playback')\n                            ? (1024 / sampleRate)\n                            /*\n                             * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                             * ScriptProcessorNode.\n                             */\n                            : ((Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate);\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return (this._state !== null) ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext\n                    .close()\n                    .then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this\n                                .resume()\n                                .then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext\n                .resume()\n                .catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext\n                .suspend()\n                .catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-constructor.js ***!
  \**************************************************************************************************************/
/*! exports provided: createAudioDestinationNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioDestinationNodeConstructor\", function() { return createAudioDestinationNodeConstructor; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\n\nconst createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, isNativeOfflineAudioContext) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline) ? createAudioDestinationNodeRenderer() : null);\n            const audioGraph = { audioWorkletGlobalScope: null, nodes: new WeakMap(), params: new WeakMap() };\n            _globals__WEBPACK_IMPORTED_MODULE_0__[\"AUDIO_GRAPHS\"].set(context, audioGraph);\n            super(context, 'passive', nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-destination-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createAudioDestinationNodeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioDestinationNodeRenderer\", function() { return createAudioDestinationNodeRenderer; });\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\nconst createAudioDestinationNodeRenderer = () => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-destination-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-listener-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-listener-factory.js ***!
  \**************************************************************************************************/
/*! exports provided: createAudioListenerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioListenerFactory\", function() { return createAudioListenerFactory; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n\nconst createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'speakers', numberOfInputs: 9 });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', offset: value });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = (nativeListener.forwardX === undefined)\n            ? createFakeAudioParams()\n            : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-listener-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-listener-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-node-constructor.js ***!
  \**************************************************************************************************/
/*! exports provided: createAudioNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioNodeConstructor\", function() { return createAudioNodeConstructor; });\n/* harmony import */ var _event_target__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../event-target */ \"./node_modules/standardized-audio-context/build/es2018/event-target.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guards/audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js\");\n/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-node-output-connection.js\");\n/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../guards/audio-worklet-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-worklet-node.js\");\n/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/connect-native-audio-node-to-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js\");\n/* harmony import */ var _helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/delete-event-listeners-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/delete-event-listeners-of-audio-node.js\");\n/* harmony import */ var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/disconnect-native-audio-node-from-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/disconnect-native-audio-node-from-native-audio-node.js\");\n/* harmony import */ var _helpers_get_audio_graph__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/get-audio-graph */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js\");\n/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js\");\n/* harmony import */ var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../helpers/get-audio-param-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js\");\n/* harmony import */ var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../helpers/get-event-listeners-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../helpers/get-native-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-param.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../helpers/get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n/* harmony import */ var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../helpers/insert-element-in-set */ \"./node_modules/standardized-audio-context/build/es2018/helpers/insert-element-in-set.js\");\n/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-active-audio-node.js\");\n/* harmony import */ var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../helpers/is-passive-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-passive-audio-node.js\");\n/* harmony import */ var _helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../helpers/pick-element-from-set */ \"./node_modules/standardized-audio-context/build/es2018/helpers/pick-element-from-set.js\");\n/* harmony import */ var _helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../helpers/set-internal-state */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js\");\n/* harmony import */ var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive-when-necessary */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state-to-passive-when-necessary.js\");\n/* harmony import */ var _helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../helpers/test-audio-node-disconnect-method-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-node-disconnect-method-support.js\");\n/* harmony import */ var _helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../helpers/wrap-audio-node-disconnect-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-node-disconnect-method.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst addAudioNode = (context, audioNode, audioNoderRender, nativeAudioNode) => {\n    const activeInputs = [];\n    for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n        activeInputs.push(new Set());\n    }\n    const { nodes } = Object(_helpers_get_audio_graph__WEBPACK_IMPORTED_MODULE_8__[\"getAudioGraph\"])(context);\n    nodes.set(audioNode, {\n        activeInputs,\n        outputs: new Set(),\n        passiveInputs: new WeakMap(),\n        renderer: audioNoderRender\n    });\n};\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n    Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(activeInputs[input], [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(activeInputs, [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n    return Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_19__[\"pickElementFromSet\"])(activeInputs[input], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_19__[\"pickElementFromSet\"])(activeInputs, (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    }\n    else {\n        Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input), ignoreDuplicates);\n    }\n};\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(passiveInputConnections, [output, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output), ignoreDuplicates);\n    }\n};\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = Object(_helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_15__[\"getValueForKey\"])(passiveInputs, source);\n    const matchingConnection = Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_19__[\"pickElementFromSet\"])(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = Object(_helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_15__[\"getValueForKey\"])(passiveInputs, source);\n    const matchingConnection = Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_19__[\"pickElementFromSet\"])(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(destination);\n    const { outputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    const eventListeners = Object(_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_11__[\"getEventListenersOfAudioNode\"])(source);\n    const eventListener = ((type) => {\n        const nativeDestinationAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(destination);\n        const nativeSourceAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(source);\n        if (type === 'active') {\n            const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n            addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n            Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__[\"connectNativeAudioNodeToNativeAudioNode\"])(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            if (Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_18__[\"isPassiveAudioNode\"])(destination)) {\n                Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_20__[\"setInternalState\"])(destination, 'active');\n            }\n        }\n        else if (type === 'passive') {\n            const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n            Object(_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_7__[\"disconnectNativeAudioNodeFromNativeAudioNode\"])(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_17__[\"isActiveAudioNode\"])(destination)) {\n                Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_21__[\"setInternalStateToPassiveWhenNecessary\"])(destination, activeInputs);\n            }\n        }\n    });\n    if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        eventListeners.add(eventListener);\n        if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_17__[\"isActiveAudioNode\"])(source)) {\n            addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n        }\n    }\n};\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n    const { activeInputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(destination);\n    const { outputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n    }\n};\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_10__[\"getAudioParamConnections\"])(source.context, destination);\n    const { outputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    const eventListeners = Object(_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_11__[\"getEventListenersOfAudioNode\"])(source);\n    const eventListener = ((type) => {\n        const nativeAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(source);\n        const nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_13__[\"getNativeAudioParam\"])(destination);\n        if (type === 'active') {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            nativeAudioNode.connect(nativeAudioParam, output);\n        }\n        else if (type === 'passive') {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            nativeAudioNode.disconnect(nativeAudioParam, output);\n        }\n    });\n    if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        eventListeners.add(eventListener);\n        if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_17__[\"isActiveAudioNode\"])(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n    }\n};\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n    const { activeInputs } = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_10__[\"getAudioParamConnections\"])(source.context, destination);\n    const { outputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_16__[\"insertElementInSet\"])(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n    }\n};\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], 'passive'];\n    }\n    return [activeInputConnection[2], 'active'];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_10__[\"getAudioParamConnections\"])(source.context, destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], 'passive'];\n    }\n    return [activeInputConnection[2], 'active'];\n};\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n    const [listener, internalState] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_6__[\"deleteEventListenerOfAudioNode\"])(source, listener);\n        if (internalState === 'active') {\n            Object(_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_7__[\"disconnectNativeAudioNodeFromNativeAudioNode\"])(Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(source), Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(destination), output, input);\n        }\n    }\n    if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_17__[\"isActiveAudioNode\"])(destination)) {\n        const { activeInputs } = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(destination);\n        Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_21__[\"setInternalStateToPassiveWhenNecessary\"])(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n    const [listener, internalState] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_6__[\"deleteEventListenerOfAudioNode\"])(source, listener);\n        if (internalState === 'active') {\n            Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(source)\n                .disconnect(Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_13__[\"getNativeAudioParam\"])(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source) => {\n    const audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_3__[\"isAudioNodeOutputConnection\"])(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n};\nconst deleteConnectionAtOutput = (source, output) => {\n    const audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_3__[\"isAudioNodeOutputConnection\"])(outputConnection)) {\n                deleteInputsOfAudioNode(source, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, ...outputConnection);\n            }\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n};\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n    const audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_9__[\"getAudioNodeConnections\"])(source);\n    return Array\n        .from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => (outputConnection[0] === destination\n        && (output === undefined || outputConnection[1] === output)\n        && (input === undefined || outputConnection[2] === input)))\n        .reduce((numberOfDeletedConnections, outputConnection) => {\n        if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_3__[\"isAudioNodeOutputConnection\"])(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return numberOfDeletedConnections + 1;\n    }, 0);\n};\nconst createAudioNodeConstructor = (cacheTestResult, createIndexSizeError, createInvalidAccessError, createNotSupportedError, detectCycles, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends _event_target__WEBPACK_IMPORTED_MODULE_0__[\"EventTarget\"] {\n        constructor(context, internalState, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_14__[\"getNativeContext\"])(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            // @todo Make sure this is not used with an OfflineAudioContext.\n            if (!isNativeOfflineAudioContext(nativeContext) && true !== cacheTestResult(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_22__[\"testAudioNodeDisconnectMethodSupport\"], () => {\n                return Object(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_22__[\"testAudioNodeDisconnectMethodSupport\"])(nativeContext);\n            })) {\n                Object(_helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_23__[\"wrapAudioNodeDisconnectMethod\"])(nativeAudioNode);\n            }\n            if (internalState === 'active') {\n                _globals__WEBPACK_IMPORTED_MODULE_1__[\"ACTIVE_AUDIO_NODE_STORE\"].add(this);\n            }\n            _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUDIO_NODE_STORE\"].set(this, nativeAudioNode);\n            _globals__WEBPACK_IMPORTED_MODULE_1__[\"EVENT_LISTENERS\"].set(this, new Set());\n            addAudioNode(context, this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        connect(destination, output = 0, input = 0) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_14__[\"getNativeContext\"])(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"isAudioNode\"])(destination)) {\n                const nativeDestinationAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_12__[\"getNativeAudioNode\"])(destination);\n                try {\n                    const connection = Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__[\"connectNativeAudioNodeToNativeAudioNode\"])(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    if (isOffline || Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_18__[\"isPassiveAudioNode\"])(this)) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    else if (Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_18__[\"isPassiveAudioNode\"])(destination)) {\n                        Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_20__[\"setInternalState\"])(destination, 'active');\n                    }\n                    // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n                    // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n                    if (Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_4__[\"isAudioWorkletNode\"])(destination)) {\n                        const auxiliaryGainNodes = _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUXILIARY_GAIN_NODE_STORE\"].get(nativeDestinationAudioNode);\n                        if (auxiliaryGainNodes === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUXILIARY_GAIN_NODE_STORE\"].set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n                        }\n                        else if (auxiliaryGainNodes.get(input) === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodes.set(input, nativeGainNode);\n                        }\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err; // tslint:disable-line:rxjs-throw-error\n                }\n                detectCycles(this, destination);\n                if (isOffline) {\n                    addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input);\n                }\n                else {\n                    addConnectionToAudioNodeOfAudioContext(this, destination, output, input);\n                }\n                return destination;\n            }\n            const nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_13__[\"getNativeAudioParam\"])(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_18__[\"isPassiveAudioNode\"])(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            }\n            detectCycles(this, destination);\n            if (isOffline) {\n                addConnectionToAudioParamOfOfflineAudioContext(this, destination, output);\n            }\n            else {\n                addConnectionToAudioParamOfAudioContext(this, destination, output);\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            if (destinationOrOutput === undefined) {\n                deleteAnyConnection(this);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                deleteConnectionAtOutput(this, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"isAudioNode\"])(destinationOrOutput)\n                    && input !== undefined\n                    && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                if (deleteConnectionToDestination(this, destinationOrOutput, output, input) === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-param-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-param-factory.js ***!
  \***********************************************************************************************/
/*! exports provided: createAudioParamFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioParamFactory\", function() { return createAudioParamFactory; });\n/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ \"./node_modules/automation-events/build/es5/bundle.js\");\n/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_get_audio_graph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/get-audio-graph */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js\");\n\n\n\nconst addAudioParam = (context, audioParam, audioParamRenderer) => {\n    const audioGraph = Object(_helpers_get_audio_graph__WEBPACK_IMPORTED_MODULE_2__[\"getAudioGraph\"])(context);\n    audioGraph.params.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n};\nconst createAudioParamFactory = (createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new automation_events__WEBPACK_IMPORTED_MODULE_0__[\"AutomationEventList\"](nativeAudioParam.defaultValue);\n        const audioParamRenderer = (isAudioParamOfOfflineAudioContext) ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return (maxValue === null) ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return (minValue === null) ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor((endTime) * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((values.length - 1) / duration) * (((firstSample + i) / sampleRate) - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] = (lowerIndex === upperIndex)\n                            ? values[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * values[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * values[upperIndex]);\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    audioParam.setValueAtTime(values[values.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUDIO_PARAM_STORE\"].set(audioParam, nativeAudioParam);\n        _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUDIO_PARAM_AUDIO_NODE_STORE\"].set(audioParam, audioNode);\n        addAudioParam(audioNode.context, audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-param-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-param-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-param-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-param-renderer.js ***!
  \************************************************************************************************/
/*! exports provided: createAudioParamRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioParamRenderer\", function() { return createAudioParamRenderer; });\nconst createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-param-renderer.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-param-renderer.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createAudioWorkletNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioWorkletNodeConstructor\", function() { return createAudioWorkletNodeConstructor; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../read-only-map */ \"./node_modules/standardized-audio-context/build/es2018/read-only-map.js\");\n\n\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    outputChannelCount: undefined,\n    parameterData: {},\n    processorOptions: {}\n};\nconst createChannelCount = (length) => {\n    const channelCount = [];\n    for (let i = 0; i < length; i += 1) {\n        channelCount.push(1);\n    }\n    return channelCount;\n};\nconst sanitizedOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: (options.outputChannelCount !== undefined) ?\n            options.outputChannelCount :\n            (options.numberOfInputs === 1 && options.numberOfOutputs === 1) ?\n                /*\n                 * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                 * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                 * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                 */\n                [options.channelCount] :\n                createChannelCount(options.numberOfOutputs)\n    };\n};\nconst createAudioWorkletNodeConstructor = (createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, gainNodeConstructor, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, noneAudioDestinationNodeConstructor) => {\n    return class AudioWorkletNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, name, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS\"].get(nativeContext);\n            const processorConstructor = (nodeNameToProcessorConstructorMap === undefined) ?\n                undefined :\n                nodeNameToProcessorConstructorMap.get(name);\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline)\n                ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor)\n                : null);\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, 'active', nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            // Bug #86 & #87: Every browser but Firefox needs to get an unused output which should not be exposed.\n            this._numberOfOutputs = (options.numberOfOutputs === 0) ? 0 : this._nativeAudioWorkletNode.numberOfOutputs;\n            this._onprocessorerror = null;\n            this._parameters = new _read_only_map__WEBPACK_IMPORTED_MODULE_3__[\"ReadOnlyMap\"](parameters);\n            /*\n             * Bug #86 & #87: Every browser but Firefox needs an output to be connected.\n             *\n             * Bug #50: Only Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore this is currently faked by\n             * using another AudioContext. And that is the reason why this will fail in case of a closed AudioContext.\n             */\n            if (context.state !== 'closed') {\n                const gainNode = new gainNodeConstructor(context, { gain: 0 });\n                try {\n                    this\n                        .connect(gainNode)\n                        .connect(context.destination);\n                }\n                catch (err) {\n                    if (err.name !== 'IndexSizeError') {\n                        throw err; // tslint:disable-line:rxjs-throw-error\n                    }\n                }\n            }\n        }\n        get numberOfOutputs() {\n            return this._numberOfOutputs;\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__[\"wrapEventListener\"])(this, value);\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror = (nativeOnProcessorError === wrappedListener) ? value : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-worklet-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createAudioWorkletNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioWorkletNodeRendererFactory\", function() { return createAudioWorkletNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/copy-from-channel */ \"./node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js\");\n/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/copy-to-channel */ \"./node_modules/standardized-audio-context/build/es2018/helpers/copy-to-channel.js\");\n/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ \"./node_modules/standardized-audio-context/build/es2018/helpers/create-nested-arrays.js\");\n/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js\");\n/* harmony import */ var _helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/get-audio-worklet-processor */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-worklet-processor.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\n\n\n\n\n\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor) => {\n    const { length } = renderedBuffer;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = (numberOfOutputChannels === 0) ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, renderedBuffer.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_4__[\"getAudioNodeConnections\"])(proxy);\n    const audioWorkletProcessor = await Object(_helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__[\"getAudioWorkletProcessor\"])(nativeOfflineAudioContext, proxy);\n    const inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__[\"createNestedArrays\"])(options.numberOfInputs, options.channelCount);\n    const outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__[\"createNestedArrays\"])(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = Array\n        .from(proxy.parameters.keys())\n        .reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.channelCount; k += 1) {\n                Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__[\"copyFromChannel\"])(renderedBuffer, inputs[j], k, k, i);\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__[\"copyFromChannel\"])(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs\n                .map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [new Float32Array(0)];\n                }\n                return input;\n            });\n            const activeSourceFlag = audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters);\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                        Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_2__[\"copyToChannel\"])(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', { error }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nconst createAudioWorkletNodeRendererFactory = (connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, disconnectMultipleOutputs, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_6__[\"getNativeAudioNode\"])(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_7__[\"isOwnedByContext\"])(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: options.outputChannelCount[i]\n                    }));\n                }\n                // Bug #87: Expose at least one output to make this node connectable.\n                const outputAudioNodes = (options.numberOfOutputs === 0) ?\n                    [outputChannelSplitterNode] :\n                    outputChannelMergerNodes;\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputAudioNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputAudioNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeOutputNodes === null) ? nativeAudioWorkletNode : nativeOutputNodes);\n            if (nativeOutputNodes !== null) {\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processorConstructor === undefined) {\n                    throw new Error('Missing the processor constructor.');\n                }\n                if (nativeOfflineAudioContextConstructor === null) {\n                    throw new Error('Missing the native OfflineAudioContext constructor.');\n                }\n                // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n                    ? 0\n                    : processorConstructor.parameterDescriptors.length;\n                const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfInputChannels + numberOfParameters, \n                // Ceil the length to the next full render quantum.\n                // Bug #17: Safari does not yet expose the length.\n                Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                const gainNodes = [];\n                const inputChannelSplitterNodes = [];\n                for (let i = 0; i < options.numberOfInputs; i += 1) {\n                    gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                        channelCount: options.channelCount,\n                        channelCountMode: options.channelCountMode,\n                        channelInterpretation: options.channelInterpretation,\n                        gain: 1\n                    }));\n                    inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                        channelCount: options.channelCount,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        numberOfOutputs: options.channelCount\n                    }));\n                }\n                const constantSourceNodes = await Promise\n                    .all(Array\n                    .from(proxy.parameters.values())\n                    .map(async (audioParam) => {\n                    const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        offset: audioParam.value\n                    });\n                    await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_8__[\"renderAutomation\"])(proxy.context, partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                    return constantSourceNode;\n                }));\n                const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'speakers',\n                    numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                });\n                for (let i = 0; i < options.numberOfInputs; i += 1) {\n                    gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                    for (let j = 0; j < options.channelCount; j += 1) {\n                        inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n                    }\n                }\n                for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                    constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                    constantSourceNode.start(0);\n                }\n                inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                return Promise\n                    .all(gainNodes\n                    .map((gainNode) => Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_9__[\"renderInputsOfAudioNode\"])(proxy, partialOfflineAudioContext, gainNode)))\n                    .then(() => renderNativeOfflineAudioContext(partialOfflineAudioContext))\n                    .then(async (renderedBuffer) => {\n                    const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n                    const processedBuffer = await processBuffer(proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor);\n                    if (processedBuffer !== null) {\n                        audioBufferSourceNode.buffer = processedBuffer;\n                        audioBufferSourceNode.start(0);\n                    }\n                    audioBufferSourceNode.connect(outputChannelSplitterNode);\n                    for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                        const outputChannelMergerNode = outputChannelMergerNodes[i];\n                        for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                        }\n                        outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                    }\n                    return outputGainNode;\n                });\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_8__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_9__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioWorkletNodeOrOutputNodes = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrOutputNodes !== undefined) {\n                    const renderedNativeAudioWorkletNodeOrGainNode = Array.isArray(renderedNativeAudioWorkletNodeOrOutputNodes)\n                        ? renderedNativeAudioWorkletNodeOrOutputNodes[2]\n                        : renderedNativeAudioWorkletNodeOrOutputNodes;\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/audio-worklet-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/base-audio-context-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/base-audio-context-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createBaseAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBaseAudioContextConstructor\", function() { return createBaseAudioContextConstructor; });\nconst createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet = (addAudioWorkletModule === undefined) ?\n                undefined :\n                { addModule: (moduleURL, options) => addAudioWorkletModule(this, moduleURL, options) };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/base-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/base-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createBiquadFilterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBiquadFilterNodeConstructor\", function() { return createBiquadFilterNodeConstructor; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\n\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nconst createBiquadFilterNodeConstructor = (createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class BiquadFilterNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = ((isOffline) ? createBiquadFilterNodeRenderer() : null);\n            super(context, 'passive', nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            // Bug #78: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            // Bug #77: Chrome, Edge, Firefox, Opera & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            // Bug #79: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            // Bug #68: Only Chrome & Opera do throw an error if the parameters differ in their length.\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/biquad-filter-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createBiquadFilterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBiquadFilterNodeRendererFactory\", function() { return createBiquadFilterNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createBiquadFilterNodeRendererFactory = (createNativeBiquadFilterNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.Q);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.detune);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.frequency);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.gain);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/biquad-filter-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/cache-test-result.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/cache-test-result.js ***!
  \*********************************************************************************************/
/*! exports provided: createCacheTestResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCacheTestResult\", function() { return createCacheTestResult; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n\nconst createCacheTestResult = (ongoingTests) => {\n    return (tester, test) => {\n        const cachedTestResult = _globals__WEBPACK_IMPORTED_MODULE_0__[\"TEST_RESULTS\"].get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        const synchronousTestResult = test();\n        if (synchronousTestResult instanceof Promise) {\n            ongoingTests.set(tester, synchronousTestResult);\n            return synchronousTestResult\n                .then((finalTestResult) => {\n                ongoingTests.delete(tester);\n                _globals__WEBPACK_IMPORTED_MODULE_0__[\"TEST_RESULTS\"].set(tester, finalTestResult);\n                return finalTestResult;\n            });\n        }\n        _globals__WEBPACK_IMPORTED_MODULE_0__[\"TEST_RESULTS\"].set(tester, synchronousTestResult);\n        return synchronousTestResult;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/cache-test-result.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/cache-test-result.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-constructor.js ***!
  \***********************************************************************************************************/
/*! exports provided: createChannelMergerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createChannelMergerNodeConstructor\", function() { return createChannelMergerNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nconst createChannelMergerNodeConstructor = (createChannelMergerNodeRenderer, createNativeChannelMergerNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class ChannelMergerNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelMergerNodeRenderer()\n                : null);\n            super(context, 'passive', nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/channel-merger-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-renderer-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-renderer-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createChannelMergerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createChannelMergerNodeRendererFactory\", function() { return createChannelMergerNodeRendererFactory; });\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\nconst createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__[\"isOwnedByContext\"])(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/channel-merger-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createChannelSplitterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createChannelSplitterNodeConstructor\", function() { return createChannelSplitterNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nconst sanitizedOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\nconst createChannelSplitterNodeConstructor = (createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class ChannelSplitterNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelSplitterNodeRenderer()\n                : null);\n            super(context, 'passive', nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/channel-splitter-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-renderer-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-renderer-factory.js ***!
  \******************************************************************************************************************/
/*! exports provided: createChannelSplitterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createChannelSplitterNodeRendererFactory\", function() { return createChannelSplitterNodeRendererFactory; });\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\nconst createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__[\"isOwnedByContext\"])(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/channel-splitter-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/connect-multiple-outputs.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/connect-multiple-outputs.js ***!
  \****************************************************************************************************/
/*! exports provided: createConnectMultipleOutputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConnectMultipleOutputs\", function() { return createConnectMultipleOutputs; });\n/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js\");\n\nconst createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isNativeAudioNode\"])(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/connect-multiple-outputs.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/connect-multiple-outputs.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-constructor.js ***!
  \************************************************************************************************************/
/*! exports provided: createConstantSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConstantSourceNodeConstructor\", function() { return createConstantSourceNodeConstructor; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js\");\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n\n\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nconst createConstantSourceNodeConstructor = (createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class ConstantSourceNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline)\n                ? createConstantSourceNodeRendererFactory()\n                : null);\n            super(context, 'passive', nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n             * minValue for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_3__[\"wrapEventListener\"])(this, value);\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = (nativeOnEnded === wrappedListener) ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            else {\n                Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__[\"setInternalState\"])(this, 'active');\n                const setInternalStateToInactive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', setInternalStateToInactive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_2__[\"setInternalState\"])(this, 'passive'), 1000);\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', setInternalStateToInactive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/constant-source-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createConstantSourceNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConstantSourceNodeRendererFactory\", function() { return createConstantSourceNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createConstantSourceNodeRendererFactory = (createNativeConstantSourceNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.offset);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/constant-source-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/convert-number-to-unsigned-long.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/convert-number-to-unsigned-long.js ***!
  \***********************************************************************************************************/
/*! exports provided: createConvertNumberToUnsignedLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConvertNumberToUnsignedLong\", function() { return createConvertNumberToUnsignedLong; });\nconst createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/convert-number-to-unsigned-long.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/convert-number-to-unsigned-long.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-constructor.js ***!
  \******************************************************************************************************/
/*! exports provided: createConvolverNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConvolverNodeConstructor\", function() { return createConvolverNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nconst createConvolverNodeConstructor = (createConvolverNodeRenderer, createNativeConvolverNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class ConvolverNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = ((isOffline) ? createConvolverNodeRenderer() : null);\n            super(context, 'passive', nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n            }\n            else {\n                this._isBufferNullified = false;\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/convolver-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! exports provided: createConvolverNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createConvolverNodeRendererFactory\", function() { return createConvolverNodeRendererFactory; });\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\nconst createConvolverNodeRendererFactory = (createNativeConvolverNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__[\"isOwnedByContext\"])(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/convolver-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/create-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/create-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! exports provided: createCreateNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCreateNativeOfflineAudioContext\", function() { return createCreateNativeOfflineAudioContext; });\nconst createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n            // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n            if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err; // tslint:disable-line:rxjs-throw-error\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/create-native-offline-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/create-native-offline-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/data-clone-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/data-clone-error.js ***!
  \********************************************************************************************/
/*! exports provided: createDataCloneError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDataCloneError\", function() { return createDataCloneError; });\nconst createDataCloneError = () => {\n    try {\n        return new DOMException('', 'DataCloneError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 25;\n        err.name = 'DataCloneError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/data-clone-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/data-clone-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/decode-audio-data.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/decode-audio-data.js ***!
  \*********************************************************************************************/
/*! exports provided: createDecodeAudioData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDecodeAudioData\", function() { return createDecodeAudioData; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/detach-array-buffer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/detach-array-buffer.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js\");\n\n\n\n\nconst createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, nativeOfflineAudioContextConstructor, isNativeContext, isNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testAudioBufferCopyChannelMethodsSubarraySupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_2__[\"getNativeContext\"])(anyContext);\n        // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n        if (_globals__WEBPACK_IMPORTED_MODULE_0__[\"DETACHED_ARRAY_BUFFERS\"].has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            _globals__WEBPACK_IMPORTED_MODULE_0__[\"DETACHED_ARRAY_BUFFERS\"].add(audioData);\n        }\n        catch (_a) {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n            const nativeContextOrBackupNativeContext = (nativeContext.state === 'closed' &&\n                nativeOfflineAudioContextConstructor !== null &&\n                isNativeOfflineAudioContext(nativeContext)) ?\n                new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) :\n                nativeContext;\n            const promise = nativeContextOrBackupNativeContext\n                .decodeAudioData(audioData)\n                .catch((err) => {\n                // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n                if (err instanceof DOMException && err.name === 'NotSupportedError') {\n                    throw new TypeError();\n                }\n                throw err;\n            });\n            return promise\n                .then((audioBuffer) => {\n                // Bug #42: Firefox does not yet fully support copyFromChannel() and copyToChannel().\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, () => testAudioBufferCopyChannelMethodsSubarraySupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsSubarray(audioBuffer);\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                    // Bug #157: No browser does allow the bufferOffset to be out-of-bounds.\n                }\n                else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    Object(_helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_1__[\"detachArrayBuffer\"])(audioData);\n                }\n                catch ( /* Ignore errors. */_a) { /* Ignore errors. */ }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_3__[\"wrapAudioBufferGetChannelDataMethod\"])(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/decode-audio-data.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/decode-audio-data.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/delay-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/delay-node-constructor.js ***!
  \**************************************************************************************************/
/*! exports provided: createDelayNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDelayNodeConstructor\", function() { return createDelayNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nconst createDelayNodeConstructor = (createAudioParam, createDelayNodeRenderer, createNativeDelayNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class DelayNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = ((isOffline)\n                ? createDelayNodeRenderer(mergedOptions.maxDelayTime)\n                : null);\n            super(context, 'passive', nativeDelayNode, delayNodeRenderer);\n            // @todo Edge does not export the correct values for maxValue and minValue.\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/delay-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/delay-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/delay-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/delay-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! exports provided: createDelayNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDelayNodeRendererFactory\", function() { return createDelayNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createDelayNodeRendererFactory = (createNativeDelayNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.delayTime);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/delay-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/delay-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/detect-cycles.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/detect-cycles.js ***!
  \*****************************************************************************************/
/*! exports provided: createDetectCycles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDetectCycles\", function() { return createDetectCycles; });\n/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js\");\n/* harmony import */ var _guards_delay_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/delay-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/delay-node.js\");\n\n\nconst createDetectCycles = (audioParamAudioNodeStore, createNotSupportedError, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(source, destination) {\n        const audioNodeOfDestination = (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isAudioNode\"])(destination))\n            ? destination\n            : getValueForKey(audioParamAudioNodeStore, destination);\n        if (Object(_guards_delay_node__WEBPACK_IMPORTED_MODULE_1__[\"isDelayNode\"])(audioNodeOfDestination)) {\n            return true;\n        }\n        if (source === audioNodeOfDestination) {\n            throw createNotSupportedError();\n        }\n        const { outputs } = getAudioNodeConnections(audioNodeOfDestination);\n        for (const outputConnection of outputs) {\n            if (detectCycles(source, outputConnection[0])) {\n                return true;\n            }\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/detect-cycles.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/detect-cycles.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/disconnect-multiple-outputs.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/disconnect-multiple-outputs.js ***!
  \*******************************************************************************************************/
/*! exports provided: createDisconnectMultipleOutputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDisconnectMultipleOutputs\", function() { return createDisconnectMultipleOutputs; });\n/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js\");\n\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nconst createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput)\n                .disconnect();\n        }\n        if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isNativeAudioNode\"])(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes\n                    .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                    .disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                .disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n            .disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/disconnect-multiple-outputs.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/disconnect-multiple-outputs.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-constructor.js ***!
  \****************************************************************************************************************/
/*! exports provided: createDynamicsCompressorNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDynamicsCompressorNodeConstructor\", function() { return createDynamicsCompressorNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nconst createDynamicsCompressorNodeConstructor = (createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class DynamicsCompressorNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = ((isOffline)\n                ? createDynamicsCompressorNodeRenderer()\n                : null);\n            super(context, 'passive', nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            // Bug #110: Edge does not export the correct values for maxValue and minValue.\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n        }\n        get attack() {\n            return this._attack;\n        }\n        /*\n         * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n         * to be overwritten here.\n         */\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/dynamics-compressor-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createDynamicsCompressorNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createDynamicsCompressorNodeRendererFactory\", function() { return createDynamicsCompressorNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createDynamicsCompressorNodeRendererFactory = (createNativeDynamicsCompressorNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.attack);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.knee);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.ratio);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.release);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.threshold);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/dynamics-compressor-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/encoding-error.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/encoding-error.js ***!
  \******************************************************************************************/
/*! exports provided: createEncodingError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createEncodingError\", function() { return createEncodingError; });\nconst createEncodingError = () => {\n    try {\n        return new DOMException('', 'EncodingError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 0;\n        err.name = 'EncodingError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/encoding-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/encoding-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/expose-current-frame-and-current-time.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/expose-current-frame-and-current-time.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createExposeCurrentFrameAndCurrentTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createExposeCurrentFrameAndCurrentTime\", function() { return createExposeCurrentFrameAndCurrentTime; });\nconst createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (nativeContext, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(nativeContext.currentTime * nativeContext.sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return nativeContext.currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/expose-current-frame-and-current-time.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/expose-current-frame-and-current-time.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/fetch-source.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/fetch-source.js ***!
  \****************************************************************************************/
/*! exports provided: createFetchSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createFetchSource\", function() { return createFetchSource; });\nconst createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch ( /* Ignore errors. */_a) { /* Ignore errors. */ } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/fetch-source.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/fetch-source.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/gain-node-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/gain-node-constructor.js ***!
  \*************************************************************************************************/
/*! exports provided: createGainNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGainNodeConstructor\", function() { return createGainNodeConstructor; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nconst createGainNodeConstructor = (createAudioParam, createGainNodeRenderer, createNativeGainNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class GainNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = ((isOffline) ? createGainNodeRenderer() : null);\n            super(context, 'passive', nativeGainNode, gainNodeRenderer);\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/gain-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/gain-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/gain-node-renderer-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/gain-node-renderer-factory.js ***!
  \******************************************************************************************************/
/*! exports provided: createGainNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGainNodeRendererFactory\", function() { return createGainNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createGainNodeRendererFactory = (createNativeGainNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.gain);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/gain-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/gain-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/get-backup-native-context.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/get-backup-native-context.js ***!
  \*****************************************************************************************************/
/*! exports provided: createGetBackupNativeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGetBackupNativeContext\", function() { return createGetBackupNativeContext; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n\nconst createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        /*\n         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n         * backupNativeContext in that case.\n         */\n        if (nativeContext.state === 'closed'\n            && nativeAudioContextConstructor !== null\n            && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                const backupNativeContext = _globals__WEBPACK_IMPORTED_MODULE_0__[\"BACKUP_NATIVE_CONTEXT_STORE\"].get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                if (nativeOfflineAudioContextConstructor !== null) {\n                    // @todo Copy the attached AudioWorkletProcessors and other settings.\n                    const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n                    _globals__WEBPACK_IMPORTED_MODULE_0__[\"BACKUP_NATIVE_CONTEXT_STORE\"].set(nativeContext, bckpNtveCntxt);\n                    return bckpNtveCntxt;\n                }\n            }\n            else {\n                const backupNativeContext = _globals__WEBPACK_IMPORTED_MODULE_0__[\"BACKUP_NATIVE_CONTEXT_STORE\"].get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                // @todo Copy the attached AudioWorkletProcessors and other settings.\n                const bckpNtveCntxt = new nativeAudioContextConstructor();\n                _globals__WEBPACK_IMPORTED_MODULE_0__[\"BACKUP_NATIVE_CONTEXT_STORE\"].set(nativeContext, bckpNtveCntxt);\n                return bckpNtveCntxt;\n            }\n        }\n        return null;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/get-backup-native-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/get-backup-native-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-constructor.js ***!
  \*******************************************************************************************************/
/*! exports provided: createIIRFilterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIIRFilterNodeConstructor\", function() { return createIIRFilterNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-iir-filter-node-get-frequency-response-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-iir-filter-node-get-frequency-response-method.js\");\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nconst createIIRFilterNodeConstructor = (createNativeIIRFilterNode, createIIRFilterNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class IIRFilterNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline)\n                ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward)\n                : null);\n            super(context, 'passive', nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            Object(_helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_1__[\"wrapIIRFilterNodeGetFrequencyResponseMethod\"])(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/iir-filter-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createIIRFilterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIIRFilterNodeRendererFactory\", function() { return createIIRFilterNodeRendererFactory; });\n/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/filter-buffer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/filter-buffer.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (feedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            feedforward[i] /= feedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            feedback[i] /= feedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        // @todo Add a test which checks support for TypedArray.prototype.fill().\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__[\"filterBuffer\"])(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nconst createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, nativeOfflineAudioContextConstructor, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeIIRFilterNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            let nativeAudioBufferSourceNode = null;\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext);\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => {\n                    return ntvCntxt.createIIRFilter(feedforward, feedback);\n                });\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeAudioBufferSourceNode === null) ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (nativeOfflineAudioContextConstructor === null) {\n                    throw new Error('Missing the native OfflineAudioContext constructor.');\n                }\n                const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                proxy.context.destination.channelCount, \n                // Bug #17: Safari does not yet expose the length.\n                proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_3__[\"renderInputsOfAudioNode\"])(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                nativeAudioBufferSourceNode.buffer = filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_3__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/iir-filter-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/index-size-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/index-size-error.js ***!
  \********************************************************************************************/
/*! exports provided: createIndexSizeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIndexSizeError\", function() { return createIndexSizeError; });\nconst createIndexSizeError = () => {\n    try {\n        return new DOMException('', 'IndexSizeError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 1;\n        err.name = 'IndexSizeError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/index-size-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/index-size-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/invalid-access-error.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/invalid-access-error.js ***!
  \************************************************************************************************/
/*! exports provided: createInvalidAccessError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createInvalidAccessError\", function() { return createInvalidAccessError; });\nconst createInvalidAccessError = () => {\n    try {\n        return new DOMException('', 'InvalidAccessError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 15;\n        err.name = 'InvalidAccessError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/invalid-access-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/invalid-access-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js ***!
  \***********************************************************************************************/
/*! exports provided: createInvalidStateError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createInvalidStateError\", function() { return createInvalidStateError; });\nconst createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/invalid-state-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-context.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-context.js ***!
  \************************************************************************************************/
/*! exports provided: createIsAnyAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsAnyAudioContext\", function() { return createIsAnyAudioContext; });\nconst createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-any-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-node.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsAnyAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsAnyAudioNode\", function() { return createIsAnyAudioNode; });\nconst createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=/build/es2018/factories/is-any-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-param.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-param.js ***!
  \**********************************************************************************************/
/*! exports provided: createIsAnyAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsAnyAudioParam\", function() { return createIsAnyAudioParam; });\nconst createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=/build/es2018/factories/is-any-audio-param.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-param.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-any-offline-audio-context.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-any-offline-audio-context.js ***!
  \********************************************************************************************************/
/*! exports provided: createIsAnyOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsAnyOfflineAudioContext\", function() { return createIsAnyOfflineAudioContext; });\nconst createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-any-offline-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-any-offline-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-context.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-context.js ***!
  \***************************************************************************************************/
/*! exports provided: createIsNativeAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsNativeAudioContext\", function() { return createIsNativeAudioContext; });\nconst createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-native-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-node.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-node.js ***!
  \************************************************************************************************/
/*! exports provided: createIsNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsNativeAudioNode\", function() { return createIsNativeAudioNode; });\nconst createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-native-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-param.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-param.js ***!
  \*************************************************************************************************/
/*! exports provided: createIsNativeAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsNativeAudioParam\", function() { return createIsNativeAudioParam; });\nconst createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-native-audio-param.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-param.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-native-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-native-context.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsNativeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsNativeContext\", function() { return createIsNativeContext; });\nconst createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return (isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything));\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-native-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-native-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-native-offline-audio-context.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-native-offline-audio-context.js ***!
  \***********************************************************************************************************/
/*! exports provided: createIsNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsNativeOfflineAudioContext\", function() { return createIsNativeOfflineAudioContext; });\nconst createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/is-native-offline-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-native-offline-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-secure-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-secure-context.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsSecureContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsSecureContext\", function() { return createIsSecureContext; });\nconst createIsSecureContext = (window) => (window !== null && window.isSecureContext);\n//# sourceMappingURL=/build/es2018/factories/is-secure-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-secure-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/is-supported-promise.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/is-supported-promise.js ***!
  \************************************************************************************************/
/*! exports provided: createIsSupportedPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createIsSupportedPromise\", function() { return createIsSupportedPromise; });\nconst createIsSupportedPromise = (cacheTestResult, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelSplitterNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport)\n        && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport)\n        && cacheTestResult(testChannelSplitterNodeChannelCountSupport, testChannelSplitterNodeChannelCountSupport)\n        && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport)\n        && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport)\n        && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport)) {\n        return Promise\n            .all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ])\n            .then((results) => results.every((result) => result));\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=/build/es2018/factories/is-supported-promise.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/is-supported-promise.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/media-element-audio-source-node-constructor.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/media-element-audio-source-node-constructor.js ***!
  \***********************************************************************************************************************/
/*! exports provided: createMediaElementAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMediaElementAudioSourceNodeConstructor\", function() { return createMediaElementAudioSourceNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst createMediaElementAudioSourceNodeConstructor = (createNativeMediaElementAudioSourceNode, createNotSupportedError, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class MediaElementAudioSourceNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            super(context, 'active', nativeMediaElementAudioSourceNode, null);\n            // Bug #63: Edge & Firefox do not expose the mediaElement yet.\n            this._mediaElement = options.mediaElement;\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return (this._nativeMediaElementAudioSourceNode.mediaElement === undefined) ?\n                this._mediaElement :\n                this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-element-audio-source-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/media-element-audio-source-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/media-stream-audio-source-node-constructor.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/media-stream-audio-source-node-constructor.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createMediaStreamAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMediaStreamAudioSourceNodeConstructor\", function() { return createMediaStreamAudioSourceNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst createMediaStreamAudioSourceNodeConstructor = (createNativeMediaStreamAudioSourceNode, createNotSupportedError, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class MediaStreamAudioSourceNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            super(context, 'active', nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-stream-audio-source-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/media-stream-audio-source-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js ***!
  \****************************************************************************************************************************/
/*! exports provided: createMediaStreamTrackAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMediaStreamTrackAudioSourceNodeConstructor\", function() { return createMediaStreamTrackAudioSourceNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst createMediaStreamTrackAudioSourceNodeConstructor = (createNativeMediaStreamTrackAudioSourceNode, createNotSupportedError, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class MediaStreamTrackAudioSourceNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw createNotSupportedError();\n            }\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, 'active', nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/media-stream-track-audio-source-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/minimal-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/minimal-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createMinimalAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMinimalAudioContextConstructor\", function() { return createMinimalAudioContextConstructor; });\n/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-valid-latency-hint.js\");\n\nconst createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__[\"isValidLatencyHint\"])(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, nativeAudioContext.destination.channelCount);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency = (typeof nativeAudioContext.baseLatency === 'number')\n                ? nativeAudioContext.baseLatency\n                : (latencyHint === 'balanced')\n                    ? (512 / sampleRate)\n                    : (latencyHint === 'interactive' || latencyHint === undefined)\n                        ? (256 / sampleRate)\n                        : (latencyHint === 'playback')\n                            ? (1024 / sampleRate)\n                            /*\n                             * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                             * ScriptProcessorNode.\n                             */\n                            : ((Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate);\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return (this._state !== null) ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext\n                    .close()\n                    .then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this\n                                .resume()\n                                .then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext\n                .resume()\n                .catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext\n                .suspend()\n                .catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/minimal-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/minimal-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js ***!
  \******************************************************************************************************************/
/*! exports provided: createMinimalBaseAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMinimalBaseAudioContextConstructor\", function() { return createMinimalBaseAudioContextConstructor; });\n/* harmony import */ var _event_target__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../event-target */ \"./node_modules/standardized-audio-context/build/es2018/event-target.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n\n\n\nconst createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener) => {\n    return class MinimalBaseAudioContext extends _event_target__WEBPACK_IMPORTED_MODULE_0__[\"EventTarget\"] {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            _globals__WEBPACK_IMPORTED_MODULE_1__[\"CONTEXT_STORE\"].set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__[\"wrapEventListener\"])(this, value);\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = (nativeOnStateChange === wrappedListener) ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/minimal-base-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/minimal-offline-audio-context-constructor.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/minimal-offline-audio-context-constructor.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createMinimalOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMinimalOfflineAudioContextConstructor\", function() { return createMinimalOfflineAudioContextConstructor; });\n/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-promise-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js\");\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nconst createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"], () => Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"])(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return (this._state === null) ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/minimal-offline-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/minimal-offline-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-analyser-node-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-analyser-node-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativeAnalyserNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAnalyserNodeFactory\", function() { return createNativeAnalyserNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/test-analyser-node-get-float-time-domain-data-method-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-analyser-node-get-float-time-domain-data-method-support.js\");\n/* harmony import */ var _helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-analyser-node-get-float-time-domain-data-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-analyser-node-get-float-time-domain-data-method.js\");\n\n\n\n\nconst createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createAnalyser());\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAnalyserNode, options, 'fftSize');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAnalyserNode, options, 'maxDecibels');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAnalyserNode, options, 'minDecibels');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__[\"testAnalyserNodeGetFloatTimeDomainDataMethodSupport\"], () => Object(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__[\"testAnalyserNodeGetFloatTimeDomainDataMethodSupport\"])(nativeAnalyserNode))) {\n            Object(_helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__[\"wrapAnalyserNodeGetFloatTimeDomainDataMethod\"])(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-analyser-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-analyser-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-constructor.js ***!
  \***********************************************************************************************************/
/*! exports provided: createNativeAudioBufferConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioBufferConstructor\", function() { return createNativeAudioBufferConstructor; });\nconst createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-buffer-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-source-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-source-node-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeAudioBufferSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioBufferSourceNodeFactory\", function() { return createNativeAudioBufferSourceNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_duration_parameter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js\");\n\n\n\n\n\n\n\nconst createNativeAudioBufferSourceNodeFactory = (cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options = {}) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__[\"assignNativeAudioNodeOptions\"])(nativeAudioBufferSourceNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeAudioBufferSourceNode, options, 'playbackRate');\n        // Bug #71: Edge does not allow to set the buffer to null.\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeAudioBufferSourceNode, options, 'loop');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeAudioBufferSourceNode, options, 'loopEnd');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__[\"wrapAudioBufferSourceNodeStartMethodConsecutiveCalls\"])(nativeAudioBufferSourceNode);\n        }\n        // Bug #92: Edge does not respect the duration parameter yet.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n            Object(_helpers_wrap_audio_buffer_source_node_start_method_duration_parameter__WEBPACK_IMPORTED_MODULE_4__[\"wrapAudioBufferSourceNodeStartMethodDurationParameter\"])(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__[\"wrapAudioScheduledSourceNodeStartMethodNegativeParameters\"])(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_6__[\"wrapAudioScheduledSourceNodeStopMethodNegativeParameters\"])(nativeAudioBufferSourceNode);\n        }\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-buffer-source-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-source-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-context-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-context-constructor.js ***!
  \************************************************************************************************************/
/*! exports provided: createNativeAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioContextConstructor\", function() { return createNativeAudioContextConstructor; });\nconst createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return (window.hasOwnProperty('webkitAudioContext')) ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-destination-node.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-destination-node.js ***!
  \*********************************************************************************************************/
/*! exports provided: createNativeAudioDestinationNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioDestinationNode\", function() { return createNativeAudioDestinationNode; });\nconst createNativeAudioDestinationNode = (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n    const nativeAudioDestinationNode = nativeContext.destination;\n    // Bug #132: Edge & Safari do not have the correct channelCount.\n    if (nativeAudioDestinationNode.channelCount !== channelCount) {\n        nativeAudioDestinationNode.channelCount = channelCount;\n    }\n    // Bug #83: Edge & Safari do not have the correct channelCountMode.\n    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n        nativeAudioDestinationNode.channelCountMode = 'explicit';\n    }\n    // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n    if (nativeAudioDestinationNode.maxChannelCount === 0) {\n        Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.channelCount\n        });\n    }\n    return nativeAudioDestinationNode;\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-destination-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-destination-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-node-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-node-factory.js ***!
  \*****************************************************************************************************/
/*! exports provided: createNativeAudioNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioNodeFactory\", function() { return createNativeAudioNodeFactory; });\nconst createNativeAudioNodeFactory = (getBackupNativeContext) => {\n    return (nativeContext, factoryFunction) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        if (backupNativeContext !== null) {\n            return factoryFunction(backupNativeContext);\n        }\n        return factoryFunction(nativeContext);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-constructor.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-constructor.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioWorkletNodeConstructor\", function() { return createNativeAudioWorkletNodeConstructor; });\nconst createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return (window.hasOwnProperty('AudioWorkletNode')) ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-worklet-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioWorkletNodeFactory\", function() { return createNativeAudioWorkletNodeFactory; });\n/* harmony import */ var _helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-clonability-of-audio-worklet-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-clonability-of-audio-worklet-node-options.js\");\n\nconst createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNotSupportedError, isNativeOfflineAudioContext) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                // Bug #86: Chrome Canary does not invoke the process() function if the corresponding AudioWorkletNode has no output.\n                const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n                    return (isNativeOfflineAudioContext(ntvCntxt) && options.numberOfInputs !== 0 && options.numberOfOutputs === 0) ?\n                        new nativeAudioWorkletNodeConstructor(ntvCntxt, name, {\n                            ...options,\n                            numberOfOutputs: 1,\n                            outputChannelCount: [1],\n                            parameterData: { ...options.parameterData, hasNoOutput: 1 }\n                        }) :\n                        new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n                });\n                const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome does not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = (typeof value === 'function') ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = (typeof args[1] === 'function')\n                                ? args[1]\n                                : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        unpatchedEventListener(new ErrorEvent(args[0], { ...event, error: new Error( /* @todo */) }));\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome Canary throws an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        Object(_helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__[\"testClonabilityOfAudioWorkletNodeOptions\"])(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-worklet-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeAudioWorkletNodeFakerFactory\", function() { return createNativeAudioWorkletNodeFakerFactory; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ \"./node_modules/standardized-audio-context/build/es2018/helpers/compute-buffer-size.js\");\n/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/copy-from-channel */ \"./node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js\");\n/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/copy-to-channel */ \"./node_modules/standardized-audio-context/build/es2018/helpers/copy-to-channel.js\");\n/* harmony import */ var _helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/create-audio-worklet-processor */ \"./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor.js\");\n/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ \"./node_modules/standardized-audio-context/build/es2018/helpers/create-nested-arrays.js\");\n/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../read-only-map */ \"./node_modules/standardized-audio-context/build/es2018/read-only-map.js\");\n\n\n\n\n\n\n\n\nconst createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        if (options.outputChannelCount !== undefined) {\n            if (options.outputChannelCount.length !== options.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n            if (options.outputChannelCount.some((channelCount) => (channelCount < 1))) {\n                throw createNotSupportedError();\n            }\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n            ? 0\n            : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: (options.parameterData[name] !== undefined)\n                        ? options.parameterData[name]\n                        : (defaultValue === undefined)\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined) ? 0 : defaultValue\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined) ? _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"] : maxValue\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined) ? _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"] : minValue\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_2__[\"computeBufferSize\"])(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: options.outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n            }\n        }\n        const parameterMap = new _read_only_map__WEBPACK_IMPORTED_MODULE_7__[\"ReadOnlyMap\"]((processorConstructor.parameterDescriptors === undefined)\n            ? []\n            : processorConstructor.parameterDescriptors\n                .map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        if (options.numberOfOutputs > 0) {\n            scriptProcessorNode.connect(outputChannelSplitterNode);\n        }\n        for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n            const outputChannelMergerNode = outputChannelMergerNodes[i];\n            for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n            }\n            outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n        }\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = (options.numberOfOutputs === 0) ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = (typeof value === 'function') ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = (typeof args[1] === 'function')\n                        ? args[1]\n                        : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = (typeof value === 'function') ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = Object(_helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__[\"createAudioWorkletProcessor\"])(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise\n            .then((dWrkltPrcssr) => audioWorkletProcessor = dWrkltPrcssr);\n        const inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_6__[\"createNestedArrays\"])(options.numberOfInputs, options.channelCount);\n        const outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_6__[\"createNestedArrays\"])(options.numberOfOutputs, options.outputChannelCount);\n        const parameters = (processorConstructor.parameterDescriptors === undefined) ?\n            [] :\n            processorConstructor.parameterDescriptors\n                .reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_3__[\"copyFromChannel\"])(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_3__[\"copyFromChannel\"])(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs\n                            .map((input, index) => {\n                            const auxiliaryGainNodes = _globals__WEBPACK_IMPORTED_MODULE_1__[\"AUXILIARY_GAIN_NODE_STORE\"].get(nativeAudioWorkletNodeFaker);\n                            if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                                return [new Float32Array(0)];\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                                Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_4__[\"copyToChannel\"])(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', { error }));\n                    }\n                    if (!isActive) {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        break;\n                    }\n                }\n            }\n        };\n        return nativeAudioWorkletNodeFaker;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-audio-worklet-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-biquad-filter-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-biquad-filter-node-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createNativeBiquadFilterNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeBiquadFilterNodeFactory\", function() { return createNativeBiquadFilterNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\n\nconst createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__[\"assignNativeAudioNodeOptions\"])(nativeBiquadFilterNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeBiquadFilterNode, options, 'Q');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeBiquadFilterNode, options, 'detune');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeBiquadFilterNode, options, 'frequency');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeBiquadFilterNode, options, 'gain');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-biquad-filter-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-biquad-filter-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-channel-merger-node-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-channel-merger-node-factory.js ***!
  \**************************************************************************************************************/
/*! exports provided: createNativeChannelMergerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeChannelMergerNodeFactory\", function() { return createNativeChannelMergerNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\nconst createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelMerger(options.numberOfInputs);\n        });\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(nativeChannelMergerNode, options);\n        // Bug #15: Safari does not return the default properties.\n        if (nativeChannelMergerNode.channelCount !== 1 &&\n            nativeChannelMergerNode.channelCountMode !== 'explicit') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        // Bug #16: Firefox does not throw an error when setting a different channelCount or channelCountMode.\n        try {\n            nativeChannelMergerNode.channelCount = (options.numberOfInputs === undefined) ? 6 : options.numberOfInputs;\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        catch ( /* Ignore errors. */_a) { /* Ignore errors. */ } // tslint:disable-line:no-empty\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-channel-merger-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-channel-merger-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-channel-splitter-node-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-channel-splitter-node-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createNativeChannelSplitterNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeChannelSplitterNodeFactory\", function() { return createNativeChannelSplitterNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-channel-splitter-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-channel-splitter-node.js\");\n\n\nconst createNativeChannelSplitterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n        });\n        // Bug #96: Safari does not have the correct channelCount.\n        // Bug #29: Edge & Safari do not have the correct channelCountMode.\n        // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(nativeChannelSplitterNode, options);\n        // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n        Object(_helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__[\"wrapChannelSplitterNode\"])(nativeChannelSplitterNode);\n        return nativeChannelSplitterNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-channel-splitter-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-channel-splitter-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createNativeConstantSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeConstantSourceNodeFactory\", function() { return createNativeConstantSourceNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js\");\n\n\n\n\nconst createNativeConstantSourceNodeFactory = (cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createConstantSource();\n        });\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeConstantSourceNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__[\"wrapAudioScheduledSourceNodeStartMethodNegativeParameters\"])(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__[\"wrapAudioScheduledSourceNodeStopMethodNegativeParameters\"])(nativeConstantSourceNode);\n        }\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-constant-source-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-faker-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-faker-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createNativeConstantSourceNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeConstantSourceNodeFakerFactory\", function() { return createNativeConstantSourceNodeFakerFactory; });\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\nconst createNativeConstantSourceNodeFakerFactory = (createNativeAudioBufferSourceNode, createNativeGainNode) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext);\n        /*\n         * @todo Edge will throw a NotSupportedError when calling createBuffer() on a closed context. That's why the audioBuffer is created\n         * after the audioBufferSourceNode in this case. If the context is closed createNativeAudioBufferSourceNode() will throw the\n         * expected error and createBuffer() never gets called.\n         */\n        const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        audioBufferSourceNode.connect(gainNode);\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return undefined;\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__[\"interceptConnections\"])(nativeConstantSourceNodeFaker, gainNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-constant-source-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-convolver-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-convolver-node-factory.js ***!
  \*********************************************************************************************************/
/*! exports provided: createNativeConvolverNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeConvolverNodeFactory\", function() { return createNativeConvolverNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeConvolverNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Edge & Safari allow to change the channelCount\n        if (options.channelCount !== 2) {\n            throw createNotSupportedError();\n        }\n        Object.defineProperty(nativeConvolverNode, 'channelCount', {\n            get: () => options.channelCount,\n            set: (value) => {\n                if (value !== options.channelCount) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        // Bug #114: Edge & Safari allow to change the channelCountMode\n        if (options.channelCountMode !== 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        Object.defineProperty(nativeConvolverNode, 'channelCountMode', {\n            get: () => options.channelCountMode,\n            set: (value) => {\n                if (value !== options.channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-convolver-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-convolver-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-delay-node-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-delay-node-factory.js ***!
  \*****************************************************************************************************/
/*! exports provided: createNativeDelayNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeDelayNodeFactory\", function() { return createNativeDelayNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeDelayNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeDelayNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDelay(options.maxDelayTime));\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeDelayNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDelayNode, options, 'delayTime');\n        return nativeDelayNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-delay-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-delay-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-dynamics-compressor-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-dynamics-compressor-node-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeDynamicsCompressorNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeDynamicsCompressorNodeFactory\", function() { return createNativeDynamicsCompressorNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDynamicsCompressorNode, options, 'attack');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDynamicsCompressorNode, options, 'knee');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDynamicsCompressorNode, options, 'ratio');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDynamicsCompressorNode, options, 'release');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-dynamics-compressor-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-dynamics-compressor-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-gain-node-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-gain-node-factory.js ***!
  \****************************************************************************************************/
/*! exports provided: createNativeGainNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeGainNodeFactory\", function() { return createNativeGainNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeGainNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeGainNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeGainNode, options, 'gain');\n        return nativeGainNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-gain-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-gain-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createNativeIIRFilterNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeIIRFilterNodeFactory\", function() { return createNativeIIRFilterNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\nconst createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        const nativeIIRFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n        });\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-iir-filter-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-faker-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-faker-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createNativeIIRFilterNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeIIRFilterNodeFakerFactory\", function() { return createNativeIIRFilterNodeFakerFactory; });\n/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ \"./node_modules/standardized-audio-context/build/es2018/helpers/compute-buffer-size.js\");\n/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/filter-buffer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/filter-buffer.js\");\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\n\n\nfunction divide(a, b) {\n    const denominator = (b[0] * b[0]) + (b[1] * b[1]);\n    return [(((a[0] * b[0]) + (a[1] * b[1])) / denominator), (((a[1] * b[0]) - (a[0] * b[1])) / denominator)];\n}\nfunction multiply(a, b) {\n    return [((a[0] * b[0]) - (a[1] * b[1])), ((a[0] * b[1]) + (a[1] * b[0]))];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nconst createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__[\"computeBufferSize\"])(baseLatency, nativeContext.sampleRate);\n        const feedbackLength = feedback.length;\n        const feedforwardLength = feedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedback.length === 0 || feedback.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforward.length === 0 || feedforward.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                feedforward[i] /= feedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                feedback[i] /= feedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            // @todo Add a test which checks support for TypedArray.prototype.fill().\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__[\"filterBuffer\"])(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(feedforward, z);\n                    const denominator = evaluatePolynomial(feedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt((response[0] * response[0]) + (response[1] * response[1]));\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__[\"interceptConnections\"])(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-iir-filter-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-media-element-audio-source-node-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-media-element-audio-source-node-factory.js ***!
  \**************************************************************************************************************************/
/*! exports provided: createNativeMediaElementAudioSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeMediaElementAudioSourceNodeFactory\", function() { return createNativeMediaElementAudioSourceNodeFactory; });\nconst createNativeMediaElementAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n        return ntvDCntxt.createMediaElementSource(options.mediaElement);\n    });\n};\n//# sourceMappingURL=/build/es2018/factories/native-media-element-audio-source-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-media-element-audio-source-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-audio-source-node-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-audio-source-node-factory.js ***!
  \*************************************************************************************************************************/
/*! exports provided: createNativeMediaStreamAudioSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeMediaStreamAudioSourceNodeFactory\", function() { return createNativeMediaStreamAudioSourceNodeFactory; });\nconst createNativeMediaStreamAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode) => {\n    return (nativeAudioContext, { mediaStream }) => {\n        const audioStreamTracks = mediaStream.getAudioTracks();\n        const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            /*\n             * Bug #151: Firefox does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n             * Bug #159: Chrome and Firefox pick the first audio track if the MediaStream has more than one audio track.\n             */\n            const filteredAudioStreamTracks = audioStreamTracks\n                .sort((a, b) => ((a.id < b.id) ? -1 : (a.id > b.id) ? 1 : 0))\n                .slice(0, 1);\n            return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n        });\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (audioStreamTracks.length === 0) {\n            throw createInvalidStateError();\n        }\n        // Bug #63: Edge & Firefox do not expose the mediaStream yet.\n        Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-media-stream-audio-source-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-audio-source-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-track-audio-source-node-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-track-audio-source-node-factory.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: createNativeMediaStreamTrackAudioSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeMediaStreamTrackAudioSourceNodeFactory\", function() { return createNativeMediaStreamTrackAudioSourceNodeFactory; });\nconst createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n        }\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            const mediaStream = new MediaStream([mediaStreamTrack]);\n            const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream);\n            // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n            if (mediaStreamTrack.kind !== 'audio') {\n                throw createInvalidStateError();\n            }\n            return nativeMediaStreamAudioSourceNode;\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-media-stream-track-audio-source-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-track-audio-source-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-offline-audio-context-constructor.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-offline-audio-context-constructor.js ***!
  \********************************************************************************************************************/
/*! exports provided: createNativeOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeOfflineAudioContextConstructor\", function() { return createNativeOfflineAudioContextConstructor; });\nconst createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return (window.hasOwnProperty('webkitOfflineAudioContext')) ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=/build/es2018/factories/native-offline-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-offline-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-oscillator-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-oscillator-node-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createNativeOscillatorNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeOscillatorNodeFactory\", function() { return createNativeOscillatorNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js\");\n/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js\");\n\n\n\n\n\nconst createNativeOscillatorNodeFactory = (cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__[\"assignNativeAudioNodeOptions\"])(nativeOscillatorNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeOscillatorNode, options, 'detune');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__[\"wrapAudioScheduledSourceNodeStartMethodNegativeParameters\"])(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: No browser does throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__[\"wrapAudioScheduledSourceNodeStopMethodNegativeParameters\"])(nativeOscillatorNode);\n        }\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-oscillator-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-oscillator-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-factory.js ***!
  \******************************************************************************************************/
/*! exports provided: createNativePannerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativePannerNodeFactory\", function() { return createNativePannerNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\n\nconst createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__[\"assignNativeAudioNodeOptions\"])(nativePannerNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'orientationX');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'orientationY');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'orientationZ');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'positionX');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'positionY');\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativePannerNode, options, 'positionZ');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'coneInnerAngle');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'coneOuterAngle');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'coneOuterGain');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'distanceModel');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'maxDistance');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'panningModel');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'refDistance');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOption\"])(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-panner-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-faker-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-faker-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createNativePannerNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativePannerNodeFakerFactory\", function() { return createNativePannerNodeFakerFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/connect-native-audio-node-to-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js\");\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\n\n\nconst createNativePannerNodeFakerFactory = (createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, channelInterpretation: 'speakers', numberOfInputs: 6 });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 0);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, curve: new Float32Array([1, 1]), oversample: 'none' });\n        let lastOrientation = [1, 0, 0];\n        let lastPosition = [0, 0, 0];\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(6)[0],\n                inputBuffer.getChannelData(7)[0],\n                inputBuffer.getChannelData(8)[0]\n            ];\n            if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        inputGainNode.connect(pannerNode);\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"connectNativeAudioNodeToNativeAudioNode\"])(inputGainNode, waveShaperNode, 0, 0);\n        waveShaperNode.connect(orientationXGainNode);\n        waveShaperNode.connect(orientationYGainNode);\n        waveShaperNode.connect(orientationZGainNode);\n        waveShaperNode.connect(positionXGainNode);\n        waveShaperNode.connect(positionYGainNode);\n        waveShaperNode.connect(positionZGainNode);\n        orientationXGainNode.connect(channelMergerNode);\n        orientationYGainNode.connect(channelMergerNode);\n        orientationZGainNode.connect(channelMergerNode);\n        positionXGainNode.connect(channelMergerNode);\n        positionYGainNode.connect(channelMergerNode);\n        positionZGainNode.connect(channelMergerNode);\n        channelMergerNode.connect(scriptProcessorNode);\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n                // Bug #123: Edge does not support HRTF as panningModel.\n                if (pannerNode.panningModel !== value && value === 'HRTF') {\n                    throw createNotSupportedError();\n                }\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__[\"interceptConnections\"])(nativePannerNodeFaker, pannerNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-panner-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-periodic-wave-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-periodic-wave-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativePeriodicWaveFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativePeriodicWaveFactory\", function() { return createNativePeriodicWaveFactory; });\nconst createNativePeriodicWaveFactory = (getBackupNativeContext) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n        const wrappedImag = new Float32Array(imag);\n        const wrappedReal = new Float32Array(real);\n        if (backupNativeContext !== null) {\n            return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n        }\n        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-periodic-wave-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-periodic-wave-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-script-processor-node-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-script-processor-node-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createNativeScriptProcessorNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeScriptProcessorNodeFactory\", function() { return createNativeScriptProcessorNodeFactory; });\nconst createNativeScriptProcessorNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n        return createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-script-processor-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-script-processor-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createNativeStereoPannerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeStereoPannerNodeFactory\", function() { return createNativeStereoPannerNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => createNativeAudioNode(nativeContext, (ntvCntxt) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeStereoPannerNode, options);\n        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeAudioParamValue\"])(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    });\n};\n//# sourceMappingURL=/build/es2018/factories/native-stereo-panner-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeStereoPannerNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeStereoPannerNodeFakerFactory\", function() { return createNativeStereoPannerNodeFakerFactory; });\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\nconst createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve });\n        inputGainNode.connect(leftGainNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        inputGainNode.connect(rightGainNode);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightWaveShaperNode.inputs[0]);\n        leftWaveShaperNode.connect(leftGainNode.gain);\n        rightWaveShaperNode.connect(rightGainNode.gain);\n        leftGainNode.connect(channelMergerNode, 0, 0);\n        rightGainNode.connect(channelMergerNode, 0, 1);\n        return [leftGainNode, rightGainNode];\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForLeftOutputWaveShaperCurve });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForRightOutputWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForLeftOutputWaveShaperCurve });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForRightOutputWaveShaperCurve });\n        inputGainNode.connect(channelSplitterNode);\n        inputGainNode.connect(panWaveShaperNode.inputs[0]);\n        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n        panWaveShaperNode.connect(panGainNode);\n        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n        return [\n            leftInputForLeftOutputGainNode,\n            rightInputForLeftOutputGainNode,\n            leftInputForRightOutputGainNode,\n            rightInputForRightOutputGainNode\n        ];\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let outputNodes = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    inputGainNode.disconnect();\n                    outputNodes.forEach((outputNode) => outputNode.disconnect());\n                    outputNodes = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode);\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__[\"interceptConnections\"])(nativeStereoPannerNodeFakerFactory, channelMergerNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-stereo-panner-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-factory.js ***!
  \***********************************************************************************************************/
/*! exports provided: createNativeWaveShaperNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeWaveShaperNodeFactory\", function() { return createNativeWaveShaperNodeFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n\n\nconst createNativeWaveShaperNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        try {\n            // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n            // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n            nativeWaveShaperNode.curve = new Float32Array([1]);\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        catch ( /* Ignore errors. */_a) { /* Ignore errors. */ }\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__[\"assignNativeAudioNodeOptions\"])(nativeWaveShaperNode, options);\n        const curve = options.curve;\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeWaveShaperNode, options, 'curve');\n        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeWaveShaperNode, options, 'oversample');\n        return nativeWaveShaperNode;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-wave-shaper-node-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-faker-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-faker-factory.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createNativeWaveShaperNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNativeWaveShaperNodeFakerFactory\", function() { return createNativeWaveShaperNodeFakerFactory; });\n/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js\");\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\n\nconst createNativeWaveShaperNodeFakerFactory = (createInvalidStateError, createNativeAudioNode, createNativeGainNode) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        const positiveWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(negativeWaveShaperNode, audioNodeOptions);\n        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOptions\"])(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        inputGainNode.connect(negativeWaveShaperNode);\n        negativeWaveShaperNode.connect(outputGainNode);\n        inputGainNode.connect(invertGainNode);\n        invertGainNode.connect(positiveWaveShaperNode);\n        positiveWaveShaperNode.connect(revertGainNode);\n        revertGainNode.connect(outputGainNode);\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (curve !== null && curve.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = ((curveLength + 1) / 2) - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] = (lowerIndex === upperIndex)\n                            ? value[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * value[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * value[upperIndex]);\n                        positiveCurve[i] = (lowerIndex === upperIndex)\n                            ? -value[curveLength - 1 - lowerIndex]\n                            : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex])\n                                - ((1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex]);\n                    }\n                    negativeCurve[length] = (curveLength % 2 === 1) ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== nativeWaveShaperNodeFaker.curve) {\n            nativeWaveShaperNodeFaker.curve = curve;\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__[\"interceptConnections\"])(nativeWaveShaperNodeFaker, outputGainNode);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/native-wave-shaper-node-faker-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-faker-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/none-audio-destination-node-constructor.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/none-audio-destination-node-constructor.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNoneAudioDestinationNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNoneAudioDestinationNodeConstructor\", function() { return createNoneAudioDestinationNodeConstructor; });\nconst createNoneAudioDestinationNodeConstructor = (audioNodeConstructor) => {\n    return class NoneAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, internalState, nativeAudioNode, audioNodeRenderer) {\n            super(context, internalState, nativeAudioNode, audioNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/none-audio-destination-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/none-audio-destination-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/not-supported-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/not-supported-error.js ***!
  \***********************************************************************************************/
/*! exports provided: createNotSupportedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNotSupportedError\", function() { return createNotSupportedError; });\nconst createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/not-supported-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/not-supported-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/offline-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/offline-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOfflineAudioContextConstructor\", function() { return createOfflineAudioContextConstructor; });\n/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-promise-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js\");\n\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nconst createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"], () => Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"])(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return (this._state === null) ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err; // tslint:disable-line:rxjs-throw-error\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/offline-audio-context-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/offline-audio-context-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-constructor.js ***!
  \*******************************************************************************************************/
/*! exports provided: createOscillatorNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOscillatorNodeConstructor\", function() { return createOscillatorNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n/* harmony import */ var _helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/set-internal-state */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js\");\n/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-event-listener */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js\");\n\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nconst createOscillatorNodeConstructor = (createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class OscillatorNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = ((isOffline) ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, 'passive', nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = Object(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_2__[\"wrapEventListener\"])(this, value);\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = (nativeOnEnded === wrappedListener) ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_1__[\"setInternalState\"])(this, 'active');\n                const setInternalStateToInactive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', setInternalStateToInactive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => Object(_helpers_set_internal_state__WEBPACK_IMPORTED_MODULE_1__[\"setInternalState\"])(this, 'passive'), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', setInternalStateToInactive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/oscillator-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createOscillatorNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createOscillatorNodeRendererFactory\", function() { return createOscillatorNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createOscillatorNodeRendererFactory = (createNativeOscillatorNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: (periodicWave === null) ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.detune);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.frequency);\n            }\n            await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/oscillator-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/panner-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/panner-node-constructor.js ***!
  \***************************************************************************************************/
/*! exports provided: createPannerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPannerNodeConstructor\", function() { return createPannerNodeConstructor; });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./node_modules/standardized-audio-context/build/es2018/constants.js\");\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nconst createPannerNodeConstructor = (createAudioParam, createNativePannerNode, createPannerNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class PannerNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_1__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = ((isOffline) ? createPannerNodeRenderer() : null);\n            super(context, 'passive', nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_POSITIVE_SINGLE_FLOAT\"], _constants__WEBPACK_IMPORTED_MODULE_0__[\"MOST_NEGATIVE_SINGLE_FLOAT\"]);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/panner-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/panner-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/panner-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/panner-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createPannerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPannerNodeRendererFactory\", function() { return createPannerNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createPannerNodeRendererFactory = (createNativePannerNode) => {\n    return () => {\n        const renderedNativePannerNodes = new WeakMap();\n        const createPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativePannerNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativePannerNode, nativeOfflineAudioContext);\n            if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativePannerNode.channelCount,\n                    channelCountMode: nativePannerNode.channelCountMode,\n                    channelInterpretation: nativePannerNode.channelInterpretation,\n                    coneInnerAngle: nativePannerNode.coneInnerAngle,\n                    coneOuterAngle: nativePannerNode.coneOuterAngle,\n                    coneOuterGain: nativePannerNode.coneOuterGain,\n                    distanceModel: nativePannerNode.distanceModel,\n                    maxDistance: nativePannerNode.maxDistance,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    panningModel: nativePannerNode.panningModel,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value,\n                    refDistance: nativePannerNode.refDistance,\n                    rolloffFactor: nativePannerNode.rolloffFactor\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativePannerNodes.set(nativeOfflineAudioContext, nativePannerNode);\n            if (!nativePannerNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationX);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationY);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.orientationZ);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.positionX);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.positionY);\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.positionZ);\n            }\n            if (nativePannerNode.inputs !== undefined) {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativePannerNode = renderedNativePannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativePannerNode);\n                }\n                return createPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/panner-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/panner-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/periodic-wave-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/periodic-wave-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createPeriodicWaveConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createPeriodicWaveConstructor\", function() { return createPeriodicWaveConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nconst createPeriodicWaveConstructor = (createNativePeriodicWave, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype)\n                || (periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/periodic-wave-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/periodic-wave-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/render-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/render-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! exports provided: createRenderNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRenderNativeOfflineAudioContext\", function() { return createRenderNativeOfflineAudioContext; });\n/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-promise-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js\");\n\nconst createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"], () => Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__[\"testPromiseSupport\"])(nativeOfflineAudioContext))) {\n            // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n            return Promise\n                .resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport))\n                .then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/render-native-offline-audio-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/render-native-offline-audio-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/start-rendering.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/start-rendering.js ***!
  \*******************************************************************************************/
/*! exports provided: createStartRendering */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStartRendering\", function() { return createStartRendering; });\n/* harmony import */ var _helpers_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-audio-node-renderer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js\");\n\n\nconst createStartRendering = (audioBufferStore, cacheTestResult, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testAudioBufferCopyChannelMethodsSubarraySupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray) => {\n    return (destination, nativeOfflineAudioContext) => Object(_helpers_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_0__[\"getAudioNodeRenderer\"])(destination)\n        .render(destination, nativeOfflineAudioContext)\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__[\"wrapAudioBufferGetChannelDataMethod\"])(audioBuffer);\n            // Bug #42: Firefox does not yet fully support copyFromChannel() and copyToChannel().\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, () => testAudioBufferCopyChannelMethodsSubarraySupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsSubarray(audioBuffer);\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            // Bug #157: No browser does allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=/build/es2018/factories/start-rendering.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/start-rendering.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createStereoPannerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStereoPannerNodeConstructor\", function() { return createStereoPannerNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nconst createStereoPannerNodeConstructor = (createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class StereoPannerNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = ((isOffline) ? createStereoPannerNodeRenderer() : null);\n            super(context, 'passive', nativeStereoPannerNode, stereoPannerNodeRenderer);\n            // Bug #106: Edge does not export a maxValue and minValue property.\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/stereo-panner-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createStereoPannerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStereoPannerNodeRendererFactory\", function() { return createStereoPannerNodeRendererFactory; });\n/* harmony import */ var _helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/connect-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js\");\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/render-automation */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\n\n\nconst createStereoPannerNodeRendererFactory = (createNativeStereoPannerNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__[\"isOwnedByContext\"])(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await Object(_helpers_render_automation__WEBPACK_IMPORTED_MODULE_3__[\"renderAutomation\"])(proxy.context, nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await Object(_helpers_connect_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"connectAudioParam\"])(proxy.context, nativeOfflineAudioContext, proxy.pan);\n            }\n            if (nativeStereoPannerNode.inputs !== undefined) {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_4__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/stereo-panner-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-constructor-support.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-constructor-support.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createTestAudioBufferConstructorSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioBufferConstructorSupport\", function() { return createTestAudioBufferConstructorSupport; });\n// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nconst createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch (_a) {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-buffer-constructor-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-constructor-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport\", function() { return createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport; });\nconst createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.start();\n        }\n        catch (_a) {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: createTestAudioBufferSourceNodeStartMethodDurationParameterSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioBufferSourceNodeStartMethodDurationParameterSupport\", function() { return createTestAudioBufferSourceNodeStartMethodDurationParameterSupport; });\n// Bug #92: Edge does not respect the duration parameter yet.\nconst createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n        audioBuffer.getChannelData(0)[0] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.start(0, 0, 0);\n        audioBufferSourceNode.connect(offlineAudioContext.destination);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            offlineAudioContext.oncomplete = ({ renderedBuffer }) => {\n                // Bug #5: Safari does not support copyFromChannel().\n                resolve(renderedBuffer.getChannelData(0)[0] === 0);\n            };\n            offlineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport\", function() { return createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport; });\nconst createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        try {\n            nativeAudioBufferSourceNode.start(0, 1);\n        }\n        catch (_a) {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-close-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-close-method-support.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createTestAudioContextCloseMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioContextCloseMethodSupport\", function() { return createTestAudioContextCloseMethodSupport; });\nconst createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined &&\n            nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = (audioContext.close !== undefined);\n        try {\n            audioContext.close();\n        }\n        catch (_a) {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-context-close-method-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-close-method-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-decode-audio-data-method-type-error-support.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-decode-audio-data-method-type-error-support.js ***!
  \******************************************************************************************************************************************/
/*! exports provided: createTestAudioContextDecodeAudioDataMethodTypeErrorSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioContextDecodeAudioDataMethodTypeErrorSupport\", function() { return createTestAudioContextDecodeAudioDataMethodTypeErrorSupport; });\n/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nconst createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            offlineAudioContext\n                // Bug #1: Safari requires a successCallback.\n                .decodeAudioData(null, () => {\n                // Ignore the success callback.\n            }, resolvePromise)\n                // Bug #6 Chrome does not call the errorCallback\n                .catch(resolvePromise);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-context-decode-audio-data-method-type-error-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-decode-audio-data-method-type-error-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-options-support.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-options-support.js ***!
  \**************************************************************************************************************/
/*! exports provided: createTestAudioContextOptionsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioContextOptionsSupport\", function() { return createTestAudioContextOptionsSupport; });\nconst createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch (_a) {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-context-options-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-options-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport\", function() { return createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport; });\nconst createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.start(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport\", function() { return createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport; });\nconst createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.start();\n        nativeAudioBufferSourceNode.stop();\n        try {\n            nativeAudioBufferSourceNode.stop();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport\", function() { return createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport; });\nconst createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.stop(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createTestAudioWorkletProcessorNoOutputsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestAudioWorkletProcessorNoOutputsSupport\", function() { return createTestAudioWorkletProcessorNoOutputsSupport; });\n/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nconst createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], { type: 'application/javascript; charset=utf-8' });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const gainNode = offlineAudioContext.createGain();\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            audioWorkletNode.port.onmessage = () => isCallingProcess = true;\n            gainNode.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch (_a) {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-channel-splitter-node-channel-count-support.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-channel-splitter-node-channel-count-support.js ***!
  \****************************************************************************************************************************/
/*! exports provided: createTestChannelSplitterNodeChannelCountSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestChannelSplitterNodeChannelCountSupport\", function() { return createTestChannelSplitterNodeChannelCountSupport; });\n/**\n * Firefox up to version 61 had a bug which caused the ChannelSplitterNode to expose a wrong channelCount property.\n */\nconst createTestChannelSplitterNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const channelSplitterNode = offlineAudioContext.createChannelSplitter(4);\n        return (channelSplitterNode.channelCount === 4);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-channel-splitter-node-channel-count-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-channel-splitter-node-channel-count-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-constant-source-node-accurate-scheduling-support.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-constant-source-node-accurate-scheduling-support.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: createTestConstantSourceNodeAccurateSchedulingSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestConstantSourceNodeAccurateSchedulingSupport\", function() { return createTestConstantSourceNodeAccurateSchedulingSupport; });\nconst createTestConstantSourceNodeAccurateSchedulingSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => ntvCntxt.createConstantSource());\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return (nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-constant-source-node-accurate-scheduling-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-constant-source-node-accurate-scheduling-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-convolver-node-buffer-reassignability-support.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-convolver-node-buffer-reassignability-support.js ***!
  \******************************************************************************************************************************/
/*! exports provided: createTestConvolverNodeBufferReassignabilitySupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestConvolverNodeBufferReassignabilitySupport\", function() { return createTestConvolverNodeBufferReassignabilitySupport; });\n// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nconst createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch (_a) {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-convolver-node-buffer-reassignability-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-convolver-node-buffer-reassignability-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-is-secure-context-support.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-is-secure-context-support.js ***!
  \**********************************************************************************************************/
/*! exports provided: createTestIsSecureContextSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestIsSecureContextSupport\", function() { return createTestIsSecureContextSupport; });\nconst createTestIsSecureContextSupport = (window) => {\n    return () => (window !== null && window.hasOwnProperty('isSecureContext'));\n};\n//# sourceMappingURL=/build/es2018/factories/test-is-secure-context-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-is-secure-context-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-offline-audio-context-current-time-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-offline-audio-context-current-time-support.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createTestOfflineAudioContextCurrentTimeSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestOfflineAudioContextCurrentTimeSupport\", function() { return createTestOfflineAudioContextCurrentTimeSupport; });\nconst createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-offline-audio-context-current-time-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-offline-audio-context-current-time-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/test-stereo-panner-node-default-value-support.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/test-stereo-panner-node-default-value-support.js ***!
  \*************************************************************************************************************************/
/*! exports provided: createTestStereoPannerNodeDefaultValueSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTestStereoPannerNodeDefaultValueSupport\", function() { return createTestStereoPannerNodeDefaultValueSupport; });\n/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nconst createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode\n            .connect(stereoPanner)\n            .connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext\n            .startRendering()\n            .then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/test-stereo-panner-node-default-value-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/test-stereo-panner-node-default-value-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/unknown-error.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/unknown-error.js ***!
  \*****************************************************************************************/
/*! exports provided: createUnknownError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createUnknownError\", function() { return createUnknownError; });\nconst createUnknownError = () => {\n    try {\n        return new DOMException('', 'UnknownError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.name = 'UnknownError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2018/factories/unknown-error.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/unknown-error.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-constructor.js ***!
  \********************************************************************************************************/
/*! exports provided: createWaveShaperNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWaveShaperNodeConstructor\", function() { return createWaveShaperNodeConstructor; });\n/* harmony import */ var _helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js\");\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nconst createWaveShaperNodeConstructor = (createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor) => {\n    return class WaveShaperNode extends noneAudioDestinationNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = Object(_helpers_get_native_context__WEBPACK_IMPORTED_MODULE_0__[\"getNativeContext\"])(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = ((isOffline) ? createWaveShaperNodeRenderer() : null);\n            super(context, 'passive', nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wave-shaper-node-constructor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-constructor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-renderer-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-renderer-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createWaveShaperNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWaveShaperNodeRendererFactory\", function() { return createWaveShaperNodeRendererFactory; });\n/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ \"./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js\");\n/* harmony import */ var _helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/render-inputs-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js\");\n\n\n\nconst createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioNode\"])(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__[\"isOwnedByContext\"])(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (nativeWaveShaperNode.inputs !== undefined) {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await Object(_helpers_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_2__[\"renderInputsOfAudioNode\"])(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wave-shaper-node-renderer-factory.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-renderer-factory.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/window.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/window.js ***!
  \**********************************************************************************/
/*! exports provided: createWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWindow\", function() { return createWindow; });\nconst createWindow = () => (typeof window === 'undefined') ? null : window;\n//# sourceMappingURL=/build/es2018/factories/window.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/window.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js ***!
  \********************************************************************************************************************************/
/*! exports provided: createWrapAudioBufferCopyChannelMethodsOutOfBounds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWrapAudioBufferCopyChannelMethodsOutOfBounds\", function() { return createWrapAudioBufferCopyChannelMethodsOutOfBounds; });\nconst createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-subarray.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-subarray.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createWrapAudioBufferCopyChannelMethodsSubarray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWrapAudioBufferCopyChannelMethodsSubarray\", function() { return createWrapAudioBufferCopyChannelMethodsSubarray; });\nconst createWrapAudioBufferCopyChannelMethodsSubarray = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (channelNumber >= audioBuffer.numberOfChannels) {\n                    throw createIndexSizeError();\n                }\n                if (bufferOffset < audioBuffer.length && audioBuffer.length - bufferOffset < destination.length) {\n                    return copyFromChannel.call(audioBuffer, destination.subarray(0, audioBuffer.length - bufferOffset), channelNumber, bufferOffset);\n                }\n                return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (channelNumber >= audioBuffer.numberOfChannels) {\n                    throw createIndexSizeError();\n                }\n                if (bufferOffset < audioBuffer.length && audioBuffer.length - bufferOffset < source.length) {\n                    return copyToChannel.call(audioBuffer, source.subarray(0, audioBuffer.length - bufferOffset), channelNumber, bufferOffset);\n                }\n                return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-subarray.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-subarray.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods.js ***!
  \******************************************************************************************************************/
/*! exports provided: createWrapAudioBufferCopyChannelMethods */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWrapAudioBufferCopyChannelMethods\", function() { return createWrapAudioBufferCopyChannelMethods; });\nconst createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wrap-audio-buffer-copy-channel-methods.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js ***!
  \******************************************************************************************************************************************/
/*! exports provided: createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\", function() { return createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls; });\n/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js\");\n\nconst createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (createNativeAudioNode) => {\n    return (nativeAudioScheduledSourceNode, nativeContext) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        nativeAudioScheduledSourceNode.connect(nativeGainNode);\n        const disconnectGainNode = ((disconnect) => {\n            return () => {\n                // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n                nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n            };\n        })(nativeAudioScheduledSourceNode.disconnect);\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n        Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__[\"interceptConnections\"])(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.stop = ((stop) => {\n            let isStopped = false;\n            return (when = 0) => {\n                if (isStopped) {\n                    try {\n                        stop.call(nativeAudioScheduledSourceNode, when);\n                    }\n                    catch (_a) {\n                        nativeGainNode.gain.setValueAtTime(0, when);\n                    }\n                }\n                else {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                    isStopped = true;\n                }\n            };\n        })(nativeAudioScheduledSourceNode.stop);\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/factories/wrap-channel-merger-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/factories/wrap-channel-merger-node.js ***!
  \****************************************************************************************************/
/*! exports provided: createWrapChannelMergerNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWrapChannelMergerNode\", function() { return createWrapChannelMergerNode; });\nconst createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode) => {\n    return (nativeContext, channelMergerNode) => {\n        const audioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const length = channelMergerNode.numberOfInputs;\n        for (let i = 0; i < length; i += 1) {\n            audioBufferSourceNode.connect(channelMergerNode, 0, i);\n        }\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2018/factories/wrap-channel-merger-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/factories/wrap-channel-merger-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/globals.js":
/*!*************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/globals.js ***!
  \*************************************************************************/
/*! exports provided: ACTIVE_AUDIO_NODE_STORE, AUDIO_BUFFER_STORE, AUDIO_NODE_STORE, AUDIO_GRAPHS, AUDIO_PARAM_STORE, AUDIO_PARAM_AUDIO_NODE_STORE, AUXILIARY_GAIN_NODE_STORE, BACKUP_NATIVE_CONTEXT_STORE, CONTEXT_STORE, DETACHED_ARRAY_BUFFERS, EVENT_LISTENERS, NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS, NODE_TO_PROCESSOR_MAPS, PERIODIC_WAVE_STORE, TEST_RESULTS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ACTIVE_AUDIO_NODE_STORE\", function() { return ACTIVE_AUDIO_NODE_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUDIO_BUFFER_STORE\", function() { return AUDIO_BUFFER_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUDIO_NODE_STORE\", function() { return AUDIO_NODE_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUDIO_GRAPHS\", function() { return AUDIO_GRAPHS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUDIO_PARAM_STORE\", function() { return AUDIO_PARAM_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUDIO_PARAM_AUDIO_NODE_STORE\", function() { return AUDIO_PARAM_AUDIO_NODE_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUXILIARY_GAIN_NODE_STORE\", function() { return AUXILIARY_GAIN_NODE_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKUP_NATIVE_CONTEXT_STORE\", function() { return BACKUP_NATIVE_CONTEXT_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONTEXT_STORE\", function() { return CONTEXT_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DETACHED_ARRAY_BUFFERS\", function() { return DETACHED_ARRAY_BUFFERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EVENT_LISTENERS\", function() { return EVENT_LISTENERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS\", function() { return NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NODE_TO_PROCESSOR_MAPS\", function() { return NODE_TO_PROCESSOR_MAPS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PERIODIC_WAVE_STORE\", function() { return PERIODIC_WAVE_STORE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TEST_RESULTS\", function() { return TEST_RESULTS; });\nconst ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nconst AUDIO_BUFFER_STORE = new WeakSet();\nconst AUDIO_NODE_STORE = new WeakMap();\nconst AUDIO_GRAPHS = new WeakMap();\nconst AUDIO_PARAM_STORE = new WeakMap();\nconst AUDIO_PARAM_AUDIO_NODE_STORE = new WeakMap();\nconst AUXILIARY_GAIN_NODE_STORE = new WeakMap();\nconst BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nconst CONTEXT_STORE = new WeakMap();\nconst DETACHED_ARRAY_BUFFERS = new WeakSet();\nconst EVENT_LISTENERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nconst NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nconst NODE_TO_PROCESSOR_MAPS = new WeakMap();\nconst PERIODIC_WAVE_STORE = new WeakSet();\nconst TEST_RESULTS = new WeakMap();\n//# sourceMappingURL=/build/es2018/globals.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/globals.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/guards/audio-node-output-connection.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/guards/audio-node-output-connection.js ***!
  \*****************************************************************************************************/
/*! exports provided: isAudioNodeOutputConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAudioNodeOutputConnection\", function() { return isAudioNodeOutputConnection; });\n/* harmony import */ var _audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js\");\n\nconst isAudioNodeOutputConnection = (outputConnection) => {\n    return Object(_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isAudioNode\"])(outputConnection[0]);\n};\n//# sourceMappingURL=/build/es2018/guards/audio-node-output-connection.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/guards/audio-node-output-connection.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js ***!
  \***********************************************************************************/
/*! exports provided: isAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAudioNode\", function() { return isAudioNode; });\nconst isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2018/guards/audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/guards/audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/guards/audio-worklet-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/guards/audio-worklet-node.js ***!
  \*******************************************************************************************/
/*! exports provided: isAudioWorkletNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAudioWorkletNode\", function() { return isAudioWorkletNode; });\nconst isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=/build/es2018/guards/audio-worklet-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/guards/audio-worklet-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/guards/delay-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/guards/delay-node.js ***!
  \***********************************************************************************/
/*! exports provided: isDelayNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDelayNode\", function() { return isDelayNode; });\nconst isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=/build/es2018/guards/delay-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/guards/delay-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js ***!
  \******************************************************************************************/
/*! exports provided: isNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNativeAudioNode\", function() { return isNativeAudioNode; });\nconst isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2018/guards/native-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js ***!
  \********************************************************************************************************************/
/*! exports provided: assignNativeAudioNodeAudioParamValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignNativeAudioNodeAudioParamValue\", function() { return assignNativeAudioNodeAudioParamValue; });\nconst assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/assign-native-audio-node-audio-param-value.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-audio-param-value.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js ***!
  \*********************************************************************************************************/
/*! exports provided: assignNativeAudioNodeOption */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignNativeAudioNodeOption\", function() { return assignNativeAudioNodeOption; });\nconst assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/assign-native-audio-node-option.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js ***!
  \**********************************************************************************************************/
/*! exports provided: assignNativeAudioNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignNativeAudioNodeOptions\", function() { return assignNativeAudioNodeOptions; });\n/* harmony import */ var _assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assign-native-audio-node-option */ \"./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-option.js\");\n\nconst assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAudioNode, options, 'channelCount');\n    Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAudioNode, options, 'channelCountMode');\n    Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__[\"assignNativeAudioNodeOption\"])(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=/build/es2018/helpers/assign-native-audio-node-options.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/assign-native-audio-node-options.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/clone-audio-worklet-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/clone-audio-worklet-node-options.js ***!
  \**********************************************************************************************************/
/*! exports provided: cloneAudioWorkletNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneAudioWorkletNodeOptions\", function() { return cloneAudioWorkletNodeOptions; });\nconst cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/clone-audio-worklet-node-options.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/clone-audio-worklet-node-options.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/compute-buffer-size.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/compute-buffer-size.js ***!
  \*********************************************************************************************/
/*! exports provided: computeBufferSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computeBufferSize\", function() { return computeBufferSize; });\nconst computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=/build/es2018/helpers/compute-buffer-size.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/compute-buffer-size.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js ***!
  \*********************************************************************************************/
/*! exports provided: connectAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectAudioParam\", function() { return connectAudioParam; });\n/* harmony import */ var _get_native_audio_param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-native-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-param.js\");\n/* harmony import */ var _render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render-inputs-of-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-param.js\");\n\n\nconst connectAudioParam = (context, nativeOfflineAudioContext, audioParam, nativeAudioParam = Object(_get_native_audio_param__WEBPACK_IMPORTED_MODULE_0__[\"getNativeAudioParam\"])(audioParam)) => {\n    return Object(_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_1__[\"renderInputsOfAudioParam\"])(context, audioParam, nativeOfflineAudioContext, nativeAudioParam);\n};\n//# sourceMappingURL=/build/es2018/helpers/connect-audio-param.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/connect-audio-param.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js ***!
  \************************************************************************************************************************/
/*! exports provided: connectNativeAudioNodeToNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectNativeAudioNodeToNativeAudioNode\", function() { return connectNativeAudioNodeToNativeAudioNode; });\nconst connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    const inputs = nativeDestinationAudioNode.inputs;\n    if (inputs !== undefined) {\n        nativeSourceAudioNode.connect(inputs[input], output, 0);\n        return [inputs[input], output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/connect-native-audio-node-to-native-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js ***!
  \*******************************************************************************************/
/*! exports provided: copyFromChannel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyFromChannel\", function() { return copyFromChannel; });\nfunction copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=/build/es2018/helpers/copy-from-channel.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/copy-from-channel.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/copy-to-channel.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/copy-to-channel.js ***!
  \*****************************************************************************************/
/*! exports provided: copyToChannel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyToChannel\", function() { return copyToChannel; });\nconst copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer\n                .getChannelData(channelNumber)\n                .set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/copy-to-channel.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/copy-to-channel.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor-promise.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor-promise.js ***!
  \****************************************************************************************************************/
/*! exports provided: createAudioWorkletProcessorPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioWorkletProcessorPromise\", function() { return createAudioWorkletProcessorPromise; });\n/* harmony import */ var _clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clone-audio-worklet-node-options */ \"./node_modules/standardized-audio-context/build/es2018/helpers/clone-audio-worklet-node-options.js\");\n\nconst createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await Object(_clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__[\"cloneAudioWorkletNodeOptions\"])(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=/build/es2018/helpers/create-audio-worklet-processor-promise.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor-promise.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor.js ***!
  \********************************************************************************************************/
/*! exports provided: createAudioWorkletProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAudioWorkletProcessor\", function() { return createAudioWorkletProcessor; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-audio-worklet-processor-promise */ \"./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor-promise.js\");\n\n\nconst createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = _globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_TO_PROCESSOR_MAPS\"].get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        _globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_TO_PROCESSOR_MAPS\"].set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = Object(_create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__[\"createAudioWorkletProcessorPromise\"])(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=/build/es2018/helpers/create-audio-worklet-processor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/create-audio-worklet-processor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/create-nested-arrays.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/create-nested-arrays.js ***!
  \**********************************************************************************************/
/*! exports provided: createNestedArrays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNestedArrays\", function() { return createNestedArrays; });\nconst createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = (typeof y === 'number') ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=/build/es2018/helpers/create-nested-arrays.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/create-nested-arrays.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/delete-event-listeners-of-audio-node.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/delete-event-listeners-of-audio-node.js ***!
  \**************************************************************************************************************/
/*! exports provided: deleteEventListenerOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteEventListenerOfAudioNode\", function() { return deleteEventListenerOfAudioNode; });\n/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js\");\n\nconst deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"getEventListenersOfAudioNode\"])(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener');\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/delete-event-listeners-of-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/delete-event-listeners-of-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/detach-array-buffer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/detach-array-buffer.js ***!
  \*********************************************************************************************/
/*! exports provided: detachArrayBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"detachArrayBuffer\", function() { return detachArrayBuffer; });\nconst detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=/build/es2018/helpers/detach-array-buffer.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/detach-array-buffer.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/disconnect-native-audio-node-from-native-audio-node.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/disconnect-native-audio-node-from-native-audio-node.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: disconnectNativeAudioNodeFromNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disconnectNativeAudioNodeFromNativeAudioNode\", function() { return disconnectNativeAudioNodeFromNativeAudioNode; });\nconst disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    const inputs = nativeDestinationAudioNode.inputs;\n    if (input === undefined || output === undefined) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode);\n    }\n    else if (inputs !== undefined) {\n        nativeSourceAudioNode.disconnect(inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/disconnect-native-audio-node-from-native-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/disconnect-native-audio-node-from-native-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/evaluate-source.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/evaluate-source.js ***!
  \*****************************************************************************************/
/*! exports provided: evaluateSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"evaluateSource\", function() { return evaluateSource; });\nconst evaluateSource = (source) => {\n    return new Promise((resolve, reject) => {\n        const head = document.head;\n        if (head === null) {\n            reject(new SyntaxError());\n        }\n        else {\n            const script = document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/evaluate-source.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/evaluate-source.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/filter-buffer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/filter-buffer.js ***!
  \***************************************************************************************/
/*! exports provided: filterBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterBuffer\", function() { return filterBuffer; });\n// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nconst filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=/build/es2018/helpers/filter-buffer.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/filter-buffer.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js ***!
  \*****************************************************************************************/
/*! exports provided: getAudioGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioGraph\", function() { return getAudioGraph; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nfunction getAudioGraph(context) {\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(_globals__WEBPACK_IMPORTED_MODULE_0__[\"AUDIO_GRAPHS\"], context);\n}\n//# sourceMappingURL=/build/es2018/helpers/get-audio-graph.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js ***!
  \****************************************************************************************************/
/*! exports provided: getAudioNodeConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioNodeConnections\", function() { return getAudioNodeConnections; });\n/* harmony import */ var _get_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-graph */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nconst getAudioNodeConnections = (audioNode) => {\n    const audioGraph = Object(_get_audio_graph__WEBPACK_IMPORTED_MODULE_0__[\"getAudioGraph\"])(audioNode.context);\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(audioGraph.nodes, audioNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/get-audio-node-connections.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js ***!
  \*************************************************************************************************/
/*! exports provided: getAudioNodeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioNodeRenderer\", function() { return getAudioNodeRenderer; });\n/* harmony import */ var _get_audio_node_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-node-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js\");\n\nconst getAudioNodeRenderer = (audioNode) => {\n    const audioNodeConnections = Object(_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_0__[\"getAudioNodeConnections\"])(audioNode);\n    if (audioNodeConnections.renderer === null) {\n        throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n    }\n    return audioNodeConnections.renderer;\n};\n//# sourceMappingURL=/build/es2018/helpers/get-audio-node-renderer.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js ***!
  \*****************************************************************************************************/
/*! exports provided: getAudioParamConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioParamConnections\", function() { return getAudioParamConnections; });\n/* harmony import */ var _get_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-graph */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-graph.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nfunction getAudioParamConnections(context, audioParam) {\n    const audioGraph = Object(_get_audio_graph__WEBPACK_IMPORTED_MODULE_0__[\"getAudioGraph\"])(context);\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(audioGraph.params, audioParam);\n}\n//# sourceMappingURL=/build/es2018/helpers/get-audio-param-connections.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-renderer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-renderer.js ***!
  \**************************************************************************************************/
/*! exports provided: getAudioParamRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioParamRenderer\", function() { return getAudioParamRenderer; });\n/* harmony import */ var _get_audio_param_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-param-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js\");\n\nfunction getAudioParamRenderer(context, audioParam) {\n    const audioParamConnections = Object(_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_0__[\"getAudioParamConnections\"])(context, audioParam);\n    if (audioParamConnections.renderer === null) {\n        throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n    }\n    return audioParamConnections.renderer;\n}\n//# sourceMappingURL=/build/es2018/helpers/get-audio-param-renderer.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-renderer.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-worklet-processor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-worklet-processor.js ***!
  \*****************************************************************************************************/
/*! exports provided: getAudioWorkletProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAudioWorkletProcessor\", function() { return getAudioWorkletProcessor; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\n\nconst getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__[\"getValueForKey\"])(_globals__WEBPACK_IMPORTED_MODULE_0__[\"NODE_TO_PROCESSOR_MAPS\"], nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = Object(_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getNativeAudioNode\"])(proxy);\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__[\"getValueForKey\"])(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/get-audio-worklet-processor.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-worklet-processor.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js ***!
  \***********************************************************************************************************/
/*! exports provided: getEventListenersOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEventListenersOfAudioNode\", function() { return getEventListenersOfAudioNode; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nconst getEventListenersOfAudioNode = (audioNode) => {\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(_globals__WEBPACK_IMPORTED_MODULE_0__[\"EVENT_LISTENERS\"], audioNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/get-event-listeners-of-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js ***!
  \***********************************************************************************************/
/*! exports provided: getNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNativeAudioNode\", function() { return getNativeAudioNode; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nconst getNativeAudioNode = (audioNode) => {\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(_globals__WEBPACK_IMPORTED_MODULE_0__[\"AUDIO_NODE_STORE\"], audioNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/get-native-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-param.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-param.js ***!
  \************************************************************************************************/
/*! exports provided: getNativeAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNativeAudioParam\", function() { return getNativeAudioParam; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n\n\nconst getNativeAudioParam = (audioParam) => {\n    return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__[\"getValueForKey\"])(_globals__WEBPACK_IMPORTED_MODULE_0__[\"AUDIO_PARAM_STORE\"], audioParam);\n};\n//# sourceMappingURL=/build/es2018/helpers/get-native-audio-param.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-native-audio-param.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js ***!
  \********************************************************************************************/
/*! exports provided: getNativeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNativeContext\", function() { return getNativeContext; });\n/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n\n\nconst getNativeContext = (context) => {\n    const nativeContext = _globals__WEBPACK_IMPORTED_MODULE_1__[\"CONTEXT_STORE\"].get(context);\n    if (nativeContext === undefined) {\n        throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidStateError\"])();\n    }\n    return nativeContext;\n};\n//# sourceMappingURL=/build/es2018/helpers/get-native-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-native-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js ***!
  \*******************************************************************************************/
/*! exports provided: getValueForKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getValueForKey\", function() { return getValueForKey; });\nconst getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=/build/es2018/helpers/get-value-for-key.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/insert-element-in-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/insert-element-in-set.js ***!
  \***********************************************************************************************/
/*! exports provided: insertElementInSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertElementInSet\", function() { return insertElementInSet; });\nconst insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=/build/es2018/helpers/insert-element-in-set.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/insert-element-in-set.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js ***!
  \***********************************************************************************************/
/*! exports provided: interceptConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"interceptConnections\", function() { return interceptConnections; });\n/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js\");\n\nconst interceptConnections = (original, interceptor) => {\n    original.connect = ((destination, \n    // @todo TypeScript can't infer the type for the parameters output and input in this case.\n    output = 0, // tslint:disable-line:no-inferrable-types\n    input = 0 // tslint:disable-line:no-inferrable-types\n    ) => {\n        if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isNativeAudioNode\"])(destination)) {\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            interceptor.connect.call(interceptor, destination, output, input);\n            // Bug #11: Safari does not support chaining yet.\n            return destination;\n        }\n        // @todo TypeScript does still assume that connect() returns void.\n        return interceptor.connect.call(interceptor, destination, output);\n    });\n    original.disconnect = function () {\n        // @todo TypeScript cannot infer all the signatures yet.\n        interceptor.disconnect.apply(interceptor, arguments);\n    };\n    return original;\n};\n//# sourceMappingURL=/build/es2018/helpers/intercept-connections.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/intercept-connections.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/is-active-audio-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/is-active-audio-node.js ***!
  \**********************************************************************************************/
/*! exports provided: isActiveAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isActiveAudioNode\", function() { return isActiveAudioNode; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n\nconst isActiveAudioNode = (audioNode) => {\n    return _globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].has(audioNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/is-active-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/is-active-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/is-constructible.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/is-constructible.js ***!
  \******************************************************************************************/
/*! exports provided: isConstructible */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isConstructible\", function() { return isConstructible; });\nconst handler = {\n    construct() {\n        return handler;\n    }\n};\nconst isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch (_a) {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2018/helpers/is-constructible.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/is-constructible.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js ***!
  \*********************************************************************************************/
/*! exports provided: isOwnedByContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOwnedByContext\", function() { return isOwnedByContext; });\nconst isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=/build/es2018/helpers/is-owned-by-context.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/is-owned-by-context.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/is-passive-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/is-passive-audio-node.js ***!
  \***********************************************************************************************/
/*! exports provided: isPassiveAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPassiveAudioNode\", function() { return isPassiveAudioNode; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n\nconst isPassiveAudioNode = (audioNode) => {\n    return !_globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].has(audioNode);\n};\n//# sourceMappingURL=/build/es2018/helpers/is-passive-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/is-passive-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/is-valid-latency-hint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/is-valid-latency-hint.js ***!
  \***********************************************************************************************/
/*! exports provided: isValidLatencyHint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidLatencyHint\", function() { return isValidLatencyHint; });\nconst isValidLatencyHint = (latencyHint) => {\n    return latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'));\n};\n//# sourceMappingURL=/build/es2018/helpers/is-valid-latency-hint.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/is-valid-latency-hint.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/pick-element-from-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/pick-element-from-set.js ***!
  \***********************************************************************************************/
/*! exports provided: pickElementFromSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pickElementFromSet\", function() { return pickElementFromSet; });\nconst pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array\n        .from(set)\n        .filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=/build/es2018/helpers/pick-element-from-set.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/pick-element-from-set.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js ***!
  \*******************************************************************************************/
/*! exports provided: renderAutomation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderAutomation\", function() { return renderAutomation; });\n/* harmony import */ var _get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-param-renderer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-renderer.js\");\n/* harmony import */ var _render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render-inputs-of-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-param.js\");\n\n\nconst renderAutomation = (context, nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n    const audioParamRenderer = Object(_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_0__[\"getAudioParamRenderer\"])(context, audioParam);\n    audioParamRenderer.replay(nativeAudioParam);\n    return Object(_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_1__[\"renderInputsOfAudioParam\"])(context, audioParam, nativeOfflineAudioContext, nativeAudioParam);\n};\n//# sourceMappingURL=/build/es2018/helpers/render-automation.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/render-automation.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js ***!
  \*****************************************************************************************************/
/*! exports provided: renderInputsOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderInputsOfAudioNode\", function() { return renderInputsOfAudioNode; });\n/* harmony import */ var _get_audio_node_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-node-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js\");\n/* harmony import */ var _get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-audio-node-renderer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js\");\n\n\nconst renderInputsOfAudioNode = (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n    const audioNodeConnections = Object(_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_0__[\"getAudioNodeConnections\"])(audioNode);\n    return Promise\n        .all(audioNodeConnections.activeInputs\n        .map((connections, input) => Array\n        .from(connections)\n        .map(([source, output]) => {\n        return Object(_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_1__[\"getAudioNodeRenderer\"])(source)\n            .render(source, nativeOfflineAudioContext)\n            .then((node) => node.connect(nativeAudioNode, output, input));\n    }))\n        .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n};\n//# sourceMappingURL=/build/es2018/helpers/render-inputs-of-audio-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-param.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-param.js ***!
  \******************************************************************************************************/
/*! exports provided: renderInputsOfAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderInputsOfAudioParam\", function() { return renderInputsOfAudioParam; });\n/* harmony import */ var _get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-audio-node-renderer */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-renderer.js\");\n/* harmony import */ var _get_audio_param_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-audio-param-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-param-connections.js\");\n\n\nconst renderInputsOfAudioParam = (context, audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n    const audioParamConnections = Object(_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_1__[\"getAudioParamConnections\"])(context, audioParam);\n    return Promise\n        .all(Array\n        .from(audioParamConnections.activeInputs)\n        .map(([source, output]) => {\n        return Object(_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_0__[\"getAudioNodeRenderer\"])(source)\n            .render(source, nativeOfflineAudioContext)\n            .then((node) => node.connect(nativeAudioParam, output));\n    }));\n};\n//# sourceMappingURL=/build/es2018/helpers/render-inputs-of-audio-param.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/render-inputs-of-audio-param.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state-to-passive-when-necessary.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state-to-passive-when-necessary.js ***!
  \**********************************************************************************************************************/
/*! exports provided: setInternalStateToPassiveWhenNecessary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setInternalStateToPassiveWhenNecessary\", function() { return setInternalStateToPassiveWhenNecessary; });\n/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-worklet-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/audio-worklet-node.js\");\n/* harmony import */ var _set_internal_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set-internal-state */ \"./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js\");\n\n\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nconst setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__[\"isAudioWorkletNode\"])(audioNode) && activeInputs.every((connections) => (connections.size === 0))) {\n        Object(_set_internal_state__WEBPACK_IMPORTED_MODULE_1__[\"setInternalState\"])(audioNode, 'passive');\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/set-internal-state-to-passive-when-necessary.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state-to-passive-when-necessary.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js ***!
  \********************************************************************************************/
/*! exports provided: setInternalState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setInternalState\", function() { return setInternalState; });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-event-listeners-of-audio-node.js\");\n\n\nconst setInternalState = (audioNode, internalState) => {\n    if (internalState === 'active') {\n        if (_globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].has(audioNode)) {\n            throw new Error('The AudioNode is already stored.');\n        }\n        _globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].add(audioNode);\n    }\n    else {\n        if (!_globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].has(audioNode)) {\n            throw new Error('The AudioNode is not stored.');\n        }\n        _globals__WEBPACK_IMPORTED_MODULE_0__[\"ACTIVE_AUDIO_NODE_STORE\"].delete(audioNode);\n    }\n    Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__[\"getEventListenersOfAudioNode\"])(audioNode)\n        .forEach((eventListener) => eventListener(internalState));\n};\n//# sourceMappingURL=/build/es2018/helpers/set-internal-state.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/set-internal-state.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/split-import-statements.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/split-import-statements.js ***!
  \*************************************************************************************************/
/*! exports provided: splitImportStatements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitImportStatements\", function() { return splitImportStatements; });\n/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nconst splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, (new URL(unresolvedUrl, url)).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements\n            .slice(result[0].length)\n            .replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=/build/es2018/helpers/split-import-statements.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/split-import-statements.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-analyser-node-get-float-time-domain-data-method-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-analyser-node-get-float-time-domain-data-method-support.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: testAnalyserNodeGetFloatTimeDomainDataMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testAnalyserNodeGetFloatTimeDomainDataMethodSupport\", function() { return testAnalyserNodeGetFloatTimeDomainDataMethodSupport; });\nconst testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=/build/es2018/helpers/test-analyser-node-get-float-time-domain-data-method-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-analyser-node-get-float-time-domain-data-method-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: testAudioBufferCopyChannelMethodsOutOfBoundsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testAudioBufferCopyChannelMethodsOutOfBoundsSupport\", function() { return testAudioBufferCopyChannelMethodsOutOfBoundsSupport; });\nconst testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch (_a) {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: testAudioBufferCopyChannelMethodsSubarraySupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testAudioBufferCopyChannelMethodsSubarraySupport\", function() { return testAudioBufferCopyChannelMethodsSubarraySupport; });\nconst testAudioBufferCopyChannelMethodsSubarraySupport = (nativeAudioBuffer) => {\n    const source = new Float32Array(2);\n    try {\n        /*\n         * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those\n         * methods is enough to know if the other one it supported as well.\n         */\n        nativeAudioBuffer.copyFromChannel(source, 0, nativeAudioBuffer.length - 1);\n    }\n    catch (_a) {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-node-disconnect-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-node-disconnect-method-support.js ***!
  \*******************************************************************************************************************/
/*! exports provided: testAudioNodeDisconnectMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testAudioNodeDisconnectMethodSupport\", function() { return testAudioNodeDisconnectMethodSupport; });\nconst testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source.connect(analyzer);\n        analyzer.connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/test-audio-node-disconnect-method-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-node-disconnect-method-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-clonability-of-audio-worklet-node-options.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-clonability-of-audio-worklet-node-options.js ***!
  \************************************************************************************************************************/
/*! exports provided: testClonabilityOfAudioWorkletNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testClonabilityOfAudioWorkletNodeOptions\", function() { return testClonabilityOfAudioWorkletNodeOptions; });\nconst testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=/build/es2018/helpers/test-clonability-of-audio-worklet-node-options.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-clonability-of-audio-worklet-node-options.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js ***!
  \**********************************************************************************************/
/*! exports provided: testPromiseSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testPromiseSupport\", function() { return testPromiseSupport; });\nconst testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([\n        1179011410,\n        40,\n        1163280727,\n        544501094,\n        16,\n        131073,\n        44100,\n        176400,\n        1048580,\n        1635017060,\n        4,\n        0\n    ]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch (_a) {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2018/helpers/test-promise-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/test-transferables-support.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/test-transferables-support.js ***!
  \****************************************************************************************************/
/*! exports provided: testTransferablesSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testTransferablesSupport\", function() { return testTransferablesSupport; });\n// Safari at version 11 did not support transferables.\nconst testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=/build/es2018/helpers/test-transferables-support.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/test-transferables-support.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-analyser-node-get-float-time-domain-data-method.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-analyser-node-get-float-time-domain-data-method.js ***!
  \******************************************************************************************************************************/
/*! exports provided: wrapAnalyserNodeGetFloatTimeDomainDataMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAnalyserNodeGetFloatTimeDomainDataMethod\", function() { return wrapAnalyserNodeGetFloatTimeDomainDataMethod; });\nconst wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-analyser-node-get-float-time-domain-data-method.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-analyser-node-get-float-time-domain-data-method.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js ***!
  \*******************************************************************************************************************/
/*! exports provided: wrapAudioBufferGetChannelDataMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioBufferGetChannelDataMethod\", function() { return wrapAudioBufferGetChannelDataMethod; });\n/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/index-size-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/index-size-error.js\");\n\nconst wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw Object(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__[\"createIndexSizeError\"])();\n                }\n                throw err; // tslint:disable-line:rxjs-throw-error\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-get-channel-data-method.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: wrapAudioBufferSourceNodeStartMethodConsecutiveCalls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioBufferSourceNodeStartMethodConsecutiveCalls\", function() { return wrapAudioBufferSourceNodeStartMethodConsecutiveCalls; });\n/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js\");\n\nconst wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidStateError\"])();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js ***!
  \***************************************************************************************************************************************/
/*! exports provided: wrapAudioBufferSourceNodeStartMethodDurationParameter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioBufferSourceNodeStartMethodDurationParameter\", function() { return wrapAudioBufferSourceNodeStartMethodDurationParameter; });\nconst wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n    let endTime = Number.POSITIVE_INFINITY;\n    let stopTime = Number.POSITIVE_INFINITY;\n    nativeAudioScheduledSourceNode.start = ((start, stop) => {\n        return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n            start.call(nativeAudioScheduledSourceNode, when, offset);\n            if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n                const actualStartTime = Math.max(when, nativeContext.currentTime);\n                // @todo The playbackRate could of course also have been automated and is not always fixed.\n                const durationInBufferTime = (duration / nativeAudioScheduledSourceNode.playbackRate.value);\n                endTime = actualStartTime + durationInBufferTime;\n                stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n            }\n        };\n    })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            stopTime = Math.max(when, nativeContext.currentTime);\n            stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js ***!
  \************************************************************************************************************************************/
/*! exports provided: wrapAudioBufferSourceNodeStartMethodOffsetClamping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioBufferSourceNodeStartMethodOffsetClamping\", function() { return wrapAudioBufferSourceNodeStartMethodOffsetClamping; });\nconst wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = (buffer === null) ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - (0.5 / nativeAudioBufferSourceNode.context.sampleRate)) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-node-disconnect-method.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-node-disconnect-method.js ***!
  \***********************************************************************************************************/
/*! exports provided: wrapAudioNodeDisconnectMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioNodeDisconnectMethod\", function() { return wrapAudioNodeDisconnectMethod; });\n/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/guards/native-audio-node.js\");\n\nconst wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        return (destination, output = 0, input = 0) => {\n            const returnValue = (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isNativeAudioNode\"])(destination))\n                ? connect(destination, output, input)\n                : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => (connection.input !== input || connection.output !== output))) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination\n                        .filter((connection) => (connection.output !== destinationOrOutput));\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination\n                            .filter((connection) => (connection.output !== output && (connection.input !== input || input === undefined)));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination\n                    .forEach((connection) => {\n                    if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__[\"isNativeAudioNode\"])(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-node-disconnect-method.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-node-disconnect-method.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: wrapAudioScheduledSourceNodeStartMethodNegativeParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioScheduledSourceNodeStartMethodNegativeParameters\", function() { return wrapAudioScheduledSourceNodeStartMethodNegativeParameters; });\nconst wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js ***!
  \******************************************************************************************************************************************/
/*! exports provided: wrapAudioScheduledSourceNodeStopMethodNegativeParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapAudioScheduledSourceNodeStopMethodNegativeParameters\", function() { return wrapAudioScheduledSourceNodeStopMethodNegativeParameters; });\nconst wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-channel-splitter-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-channel-splitter-node.js ***!
  \****************************************************************************************************/
/*! exports provided: wrapChannelSplitterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapChannelSplitterNode\", function() { return wrapChannelSplitterNode; });\n/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js\");\n\nconst wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidStateError\"])();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidStateError\"])();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidStateError\"])();\n            }\n        }\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-channel-splitter-node.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-channel-splitter-node.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js ***!
  \*********************************************************************************************/
/*! exports provided: wrapEventListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapEventListener\", function() { return wrapEventListener; });\nconst wrapEventListener = (target, eventListener) => {\n    if (typeof eventListener === 'function') {\n        return (event) => {\n            const descriptor = { value: target };\n            Object.defineProperties(event, {\n                currentTarget: descriptor,\n                target: descriptor\n            });\n            return eventListener.call(target, event);\n        };\n    }\n    return eventListener;\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-event-listener.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-event-listener.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/helpers/wrap-iir-filter-node-get-frequency-response-method.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/helpers/wrap-iir-filter-node-get-frequency-response-method.js ***!
  \****************************************************************************************************************************/
/*! exports provided: wrapIIRFilterNodeGetFrequencyResponseMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapIIRFilterNodeGetFrequencyResponseMethod\", function() { return wrapIIRFilterNodeGetFrequencyResponseMethod; });\n/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-access-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-access-error.js\");\n\nconst wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw Object(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__[\"createInvalidAccessError\"])();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=/build/es2018/helpers/wrap-iir-filter-node-get-frequency-response-method.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/helpers/wrap-iir-filter-node-get-frequency-response-method.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/module.js":
/*!************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/module.js ***!
  \************************************************************************/
/*! exports provided: AnalyserNode, AudioBuffer, AudioBufferSourceNode, addAudioWorkletModule, decodeAudioData, AudioContext, AudioWorkletNode, BiquadFilterNode, ChannelMergerNode, ChannelSplitterNode, ConvolverNode, ConstantSourceNode, DelayNode, DynamicsCompressorNode, GainNode, IIRFilterNode, MediaElementAudioSourceNode, MediaStreamAudioSourceNode, MediaStreamTrackAudioSourceNode, MinimalAudioContext, MinimalOfflineAudioContext, OfflineAudioContext, OscillatorNode, PannerNode, PeriodicWave, StereoPannerNode, WaveShaperNode, isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, isSupported */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnalyserNode\", function() { return analyserNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioBuffer\", function() { return audioBufferConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioBufferSourceNode\", function() { return audioBufferSourceNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addAudioWorkletModule\", function() { return addAudioWorkletModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeAudioData\", function() { return decodeAudioData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioContext\", function() { return audioContextConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AudioWorkletNode\", function() { return audioWorkletNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BiquadFilterNode\", function() { return biquadFilterNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChannelMergerNode\", function() { return channelMergerNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChannelSplitterNode\", function() { return channelSplitterNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConvolverNode\", function() { return convolverNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConstantSourceNode\", function() { return constantSourceNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelayNode\", function() { return delayNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DynamicsCompressorNode\", function() { return dynamicsCompressorNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GainNode\", function() { return gainNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IIRFilterNode\", function() { return iIRFilterNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaElementAudioSourceNode\", function() { return mediaElementAudioSourceNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaStreamAudioSourceNode\", function() { return mediaStreamAudioSourceNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaStreamTrackAudioSourceNode\", function() { return mediaStreamTrackAudioSourceNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinimalAudioContext\", function() { return minimalAudioContextConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinimalOfflineAudioContext\", function() { return minimalOfflineAudioContextConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OfflineAudioContext\", function() { return offlineAudioContextConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OscillatorNode\", function() { return oscillatorNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PannerNode\", function() { return pannerNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PeriodicWave\", function() { return periodicWaveConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StereoPannerNode\", function() { return stereoPannerNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WaveShaperNode\", function() { return waveShaperNodeConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAnyAudioContext\", function() { return isAnyAudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAnyAudioNode\", function() { return isAnyAudioNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAnyAudioParam\", function() { return isAnyAudioParam; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAnyOfflineAudioContext\", function() { return isAnyOfflineAudioContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSupported\", function() { return isSupported; });\n/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ \"./node_modules/automation-events/build/es5/bundle.js\");\n/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _factories_abort_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factories/abort-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/abort-error.js\");\n/* harmony import */ var _factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./factories/add-audio-worklet-module */ \"./node_modules/standardized-audio-context/build/es2018/factories/add-audio-worklet-module.js\");\n/* harmony import */ var _factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./factories/analyser-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-constructor.js\");\n/* harmony import */ var _factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./factories/analyser-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/analyser-node-renderer-factory.js\");\n/* harmony import */ var _factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./factories/audio-buffer-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-constructor.js\");\n/* harmony import */ var _factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-constructor.js\");\n/* harmony import */ var _factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-buffer-source-node-renderer-factory.js\");\n/* harmony import */ var _factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./factories/audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-context-constructor.js\");\n/* harmony import */ var _factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./factories/audio-destination-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-constructor.js\");\n/* harmony import */ var _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./factories/audio-destination-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-destination-node-renderer-factory.js\");\n/* harmony import */ var _factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./factories/audio-listener-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-listener-factory.js\");\n/* harmony import */ var _factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./factories/audio-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-node-constructor.js\");\n/* harmony import */ var _factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./factories/audio-param-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-param-factory.js\");\n/* harmony import */ var _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./factories/audio-param-renderer */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-param-renderer.js\");\n/* harmony import */ var _factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./factories/audio-worklet-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-constructor.js\");\n/* harmony import */ var _factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./factories/audio-worklet-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/audio-worklet-node-renderer-factory.js\");\n/* harmony import */ var _factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./factories/base-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/base-audio-context-constructor.js\");\n/* harmony import */ var _factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./factories/biquad-filter-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-constructor.js\");\n/* harmony import */ var _factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./factories/biquad-filter-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/biquad-filter-node-renderer-factory.js\");\n/* harmony import */ var _factories_cache_test_result__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./factories/cache-test-result */ \"./node_modules/standardized-audio-context/build/es2018/factories/cache-test-result.js\");\n/* harmony import */ var _factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./factories/channel-merger-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-constructor.js\");\n/* harmony import */ var _factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./factories/channel-merger-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/channel-merger-node-renderer-factory.js\");\n/* harmony import */ var _factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./factories/channel-splitter-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-constructor.js\");\n/* harmony import */ var _factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./factories/channel-splitter-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/channel-splitter-node-renderer-factory.js\");\n/* harmony import */ var _factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./factories/connect-multiple-outputs */ \"./node_modules/standardized-audio-context/build/es2018/factories/connect-multiple-outputs.js\");\n/* harmony import */ var _factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./factories/constant-source-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-constructor.js\");\n/* harmony import */ var _factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./factories/constant-source-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/constant-source-node-renderer-factory.js\");\n/* harmony import */ var _factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./factories/convert-number-to-unsigned-long */ \"./node_modules/standardized-audio-context/build/es2018/factories/convert-number-to-unsigned-long.js\");\n/* harmony import */ var _factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./factories/convolver-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-constructor.js\");\n/* harmony import */ var _factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./factories/convolver-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/convolver-node-renderer-factory.js\");\n/* harmony import */ var _factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./factories/create-native-offline-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/create-native-offline-audio-context.js\");\n/* harmony import */ var _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./factories/data-clone-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/data-clone-error.js\");\n/* harmony import */ var _factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./factories/decode-audio-data */ \"./node_modules/standardized-audio-context/build/es2018/factories/decode-audio-data.js\");\n/* harmony import */ var _factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./factories/delay-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/delay-node-constructor.js\");\n/* harmony import */ var _factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./factories/delay-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/delay-node-renderer-factory.js\");\n/* harmony import */ var _factories_detect_cycles__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./factories/detect-cycles */ \"./node_modules/standardized-audio-context/build/es2018/factories/detect-cycles.js\");\n/* harmony import */ var _factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./factories/disconnect-multiple-outputs */ \"./node_modules/standardized-audio-context/build/es2018/factories/disconnect-multiple-outputs.js\");\n/* harmony import */ var _factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-constructor.js\");\n/* harmony import */ var _factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/dynamics-compressor-node-renderer-factory.js\");\n/* harmony import */ var _factories_encoding_error__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./factories/encoding-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/encoding-error.js\");\n/* harmony import */ var _factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./factories/expose-current-frame-and-current-time */ \"./node_modules/standardized-audio-context/build/es2018/factories/expose-current-frame-and-current-time.js\");\n/* harmony import */ var _factories_fetch_source__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./factories/fetch-source */ \"./node_modules/standardized-audio-context/build/es2018/factories/fetch-source.js\");\n/* harmony import */ var _factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./factories/gain-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/gain-node-constructor.js\");\n/* harmony import */ var _factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./factories/gain-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/gain-node-renderer-factory.js\");\n/* harmony import */ var _factories_get_backup_native_context__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./factories/get-backup-native-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/get-backup-native-context.js\");\n/* harmony import */ var _factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./factories/iir-filter-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-constructor.js\");\n/* harmony import */ var _factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./factories/iir-filter-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/iir-filter-node-renderer-factory.js\");\n/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./factories/index-size-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/index-size-error.js\");\n/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./factories/invalid-access-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-access-error.js\");\n/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./factories/invalid-state-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/invalid-state-error.js\");\n/* harmony import */ var _factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./factories/is-any-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-context.js\");\n/* harmony import */ var _factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./factories/is-any-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-node.js\");\n/* harmony import */ var _factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./factories/is-any-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-any-audio-param.js\");\n/* harmony import */ var _factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./factories/is-any-offline-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-any-offline-audio-context.js\");\n/* harmony import */ var _factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./factories/is-native-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-context.js\");\n/* harmony import */ var _factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./factories/is-native-audio-node */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-node.js\");\n/* harmony import */ var _factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./factories/is-native-audio-param */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-native-audio-param.js\");\n/* harmony import */ var _factories_is_native_context__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./factories/is-native-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-native-context.js\");\n/* harmony import */ var _factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./factories/is-native-offline-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-native-offline-audio-context.js\");\n/* harmony import */ var _factories_is_secure_context__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./factories/is-secure-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-secure-context.js\");\n/* harmony import */ var _factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./factories/is-supported-promise */ \"./node_modules/standardized-audio-context/build/es2018/factories/is-supported-promise.js\");\n/* harmony import */ var _factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./factories/media-element-audio-source-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/media-element-audio-source-node-constructor.js\");\n/* harmony import */ var _factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./factories/media-stream-audio-source-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/media-stream-audio-source-node-constructor.js\");\n/* harmony import */ var _factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./factories/media-stream-track-audio-source-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/media-stream-track-audio-source-node-constructor.js\");\n/* harmony import */ var _factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./factories/minimal-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/minimal-audio-context-constructor.js\");\n/* harmony import */ var _factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./factories/minimal-base-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/minimal-base-audio-context-constructor.js\");\n/* harmony import */ var _factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./factories/minimal-offline-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/minimal-offline-audio-context-constructor.js\");\n/* harmony import */ var _factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./factories/native-analyser-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-analyser-node-factory.js\");\n/* harmony import */ var _factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./factories/native-audio-buffer-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-constructor.js\");\n/* harmony import */ var _factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./factories/native-audio-buffer-source-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-buffer-source-node-factory.js\");\n/* harmony import */ var _factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./factories/native-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-context-constructor.js\");\n/* harmony import */ var _factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./factories/native-audio-destination-node */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-destination-node.js\");\n/* harmony import */ var _factories_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./factories/native-audio-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-node-factory.js\");\n/* harmony import */ var _factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-constructor.js\");\n/* harmony import */ var _factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-factory.js\");\n/* harmony import */ var _factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-audio-worklet-node-faker-factory.js\");\n/* harmony import */ var _factories_native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./factories/native-biquad-filter-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-biquad-filter-node-factory.js\");\n/* harmony import */ var _factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./factories/native-channel-merger-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-channel-merger-node-factory.js\");\n/* harmony import */ var _factories_native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./factories/native-channel-splitter-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-channel-splitter-node-factory.js\");\n/* harmony import */ var _factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./factories/native-constant-source-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-factory.js\");\n/* harmony import */ var _factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./factories/native-constant-source-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-constant-source-node-faker-factory.js\");\n/* harmony import */ var _factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./factories/native-convolver-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-convolver-node-factory.js\");\n/* harmony import */ var _factories_native_delay_node_factory__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./factories/native-delay-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-delay-node-factory.js\");\n/* harmony import */ var _factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./factories/native-dynamics-compressor-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-dynamics-compressor-node-factory.js\");\n/* harmony import */ var _factories_native_gain_node_factory__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./factories/native-gain-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-gain-node-factory.js\");\n/* harmony import */ var _factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./factories/native-iir-filter-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-factory.js\");\n/* harmony import */ var _factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./factories/native-iir-filter-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-iir-filter-node-faker-factory.js\");\n/* harmony import */ var _factories_native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./factories/native-media-element-audio-source-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-media-element-audio-source-node-factory.js\");\n/* harmony import */ var _factories_native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./factories/native-media-stream-audio-source-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-audio-source-node-factory.js\");\n/* harmony import */ var _factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./factories/native-media-stream-track-audio-source-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-media-stream-track-audio-source-node-factory.js\");\n/* harmony import */ var _factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./factories/native-offline-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-offline-audio-context-constructor.js\");\n/* harmony import */ var _factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./factories/native-oscillator-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-oscillator-node-factory.js\");\n/* harmony import */ var _factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./factories/native-panner-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-factory.js\");\n/* harmony import */ var _factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./factories/native-panner-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-panner-node-faker-factory.js\");\n/* harmony import */ var _factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./factories/native-periodic-wave-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-periodic-wave-factory.js\");\n/* harmony import */ var _factories_native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./factories/native-script-processor-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-script-processor-node-factory.js\");\n/* harmony import */ var _factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-factory.js\");\n/* harmony import */ var _factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-stereo-panner-node-faker-factory.js\");\n/* harmony import */ var _factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-factory.js\");\n/* harmony import */ var _factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-faker-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/native-wave-shaper-node-faker-factory.js\");\n/* harmony import */ var _factories_none_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./factories/none-audio-destination-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/none-audio-destination-node-constructor.js\");\n/* harmony import */ var _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./factories/not-supported-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/not-supported-error.js\");\n/* harmony import */ var _factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./factories/offline-audio-context-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/offline-audio-context-constructor.js\");\n/* harmony import */ var _factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./factories/oscillator-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-constructor.js\");\n/* harmony import */ var _factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./factories/oscillator-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/oscillator-node-renderer-factory.js\");\n/* harmony import */ var _factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./factories/panner-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/panner-node-constructor.js\");\n/* harmony import */ var _factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./factories/panner-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/panner-node-renderer-factory.js\");\n/* harmony import */ var _factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./factories/periodic-wave-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/periodic-wave-constructor.js\");\n/* harmony import */ var _factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./factories/render-native-offline-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/factories/render-native-offline-audio-context.js\");\n/* harmony import */ var _factories_start_rendering__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./factories/start-rendering */ \"./node_modules/standardized-audio-context/build/es2018/factories/start-rendering.js\");\n/* harmony import */ var _factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./factories/stereo-panner-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-constructor.js\");\n/* harmony import */ var _factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./factories/stereo-panner-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/stereo-panner-node-renderer-factory.js\");\n/* harmony import */ var _factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./factories/test-audio-buffer-constructor-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-constructor-support.js\");\n/* harmony import */ var _factories_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./factories/test-audio-buffer-source-node-start-method-consecutive-calls-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js\");\n/* harmony import */ var _factories_test_audio_buffer_source_node_start_method_duration_parameter_support__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./factories/test-audio-buffer-source-node-start-method-duration-parameter-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js\");\n/* harmony import */ var _factories_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./factories/test-audio-buffer-source-node-start-method-offset-clamping-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js\");\n/* harmony import */ var _factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./factories/test-audio-context-close-method-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-close-method-support.js\");\n/* harmony import */ var _factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./factories/test-audio-context-decode-audio-data-method-type-error-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-decode-audio-data-method-type-error-support.js\");\n/* harmony import */ var _factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./factories/test-audio-context-options-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-context-options-support.js\");\n/* harmony import */ var _factories_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./factories/test-audio-scheduled-source-node-start-method-negative-parameters-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js\");\n/* harmony import */ var _factories_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js\");\n/* harmony import */ var _factories_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js\");\n/* harmony import */ var _factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./factories/test-audio-worklet-processor-no-outputs-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-audio-worklet-processor-no-outputs-support.js\");\n/* harmony import */ var _factories_test_channel_splitter_node_channel_count_support__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./factories/test-channel-splitter-node-channel-count-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-channel-splitter-node-channel-count-support.js\");\n/* harmony import */ var _factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./factories/test-constant-source-node-accurate-scheduling-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-constant-source-node-accurate-scheduling-support.js\");\n/* harmony import */ var _factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./factories/test-convolver-node-buffer-reassignability-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-convolver-node-buffer-reassignability-support.js\");\n/* harmony import */ var _factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./factories/test-is-secure-context-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-is-secure-context-support.js\");\n/* harmony import */ var _factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./factories/test-offline-audio-context-current-time-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-offline-audio-context-current-time-support.js\");\n/* harmony import */ var _factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./factories/test-stereo-panner-node-default-value-support */ \"./node_modules/standardized-audio-context/build/es2018/factories/test-stereo-panner-node-default-value-support.js\");\n/* harmony import */ var _factories_unknown_error__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./factories/unknown-error */ \"./node_modules/standardized-audio-context/build/es2018/factories/unknown-error.js\");\n/* harmony import */ var _factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./factories/wave-shaper-node-constructor */ \"./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-constructor.js\");\n/* harmony import */ var _factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./factories/wave-shaper-node-renderer-factory */ \"./node_modules/standardized-audio-context/build/es2018/factories/wave-shaper-node-renderer-factory.js\");\n/* harmony import */ var _factories_window__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./factories/window */ \"./node_modules/standardized-audio-context/build/es2018/factories/window.js\");\n/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods */ \"./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods.js\");\n/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds */ \"./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js\");\n/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods_subarray__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods-subarray */ \"./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-buffer-copy-channel-methods-subarray.js\");\n/* harmony import */ var _factories_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls */ \"./node_modules/standardized-audio-context/build/es2018/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js\");\n/* harmony import */ var _factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./factories/wrap-channel-merger-node */ \"./node_modules/standardized-audio-context/build/es2018/factories/wrap-channel-merger-node.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./globals */ \"./node_modules/standardized-audio-context/build/es2018/globals.js\");\n/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./helpers/get-audio-node-connections */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-audio-node-connections.js\");\n/* harmony import */ var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./helpers/get-value-for-key */ \"./node_modules/standardized-audio-context/build/es2018/helpers/get-value-for-key.js\");\n/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js\");\n/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./helpers/test-audio-buffer-copy-channel-methods-subarray-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-audio-buffer-copy-channel-methods-subarray-support.js\");\n/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./helpers/test-promise-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-promise-support.js\");\n/* harmony import */ var _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./helpers/test-transferables-support */ \"./node_modules/standardized-audio-context/build/es2018/helpers/test-transferables-support.js\");\n/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping */ \"./node_modules/standardized-audio-context/build/es2018/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst cacheTestResult = Object(_factories_cache_test_result__WEBPACK_IMPORTED_MODULE_20__[\"createCacheTestResult\"])(new Map());\nconst window = Object(_factories_window__WEBPACK_IMPORTED_MODULE_133__[\"createWindow\"])();\nconst nativeOfflineAudioContextConstructor = Object(_factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_91__[\"createNativeOfflineAudioContextConstructor\"])(window);\nconst isNativeOfflineAudioContext = Object(_factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_59__[\"createIsNativeOfflineAudioContext\"])(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = Object(_factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_71__[\"createNativeAudioContextConstructor\"])(window);\nconst getBackupNativeContext = Object(_factories_get_backup_native_context__WEBPACK_IMPORTED_MODULE_45__[\"createGetBackupNativeContext\"])(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = Object(_factories_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_73__[\"createNativeAudioNodeFactory\"])(getBackupNativeContext);\nconst createNativeAnalyserNode = Object(_factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_68__[\"createNativeAnalyserNodeFactory\"])(cacheTestResult, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"], createNativeAudioNode);\nconst createAnalyserNodeRenderer = Object(_factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_4__[\"createAnalyserNodeRendererFactory\"])(createNativeAnalyserNode);\nconst isNativeAudioNode = Object(_factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_56__[\"createIsNativeAudioNode\"])(window);\nconst isNativeAudioParam = Object(_factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_57__[\"createIsNativeAudioParam\"])(window);\nconst audioNodeConstructor = Object(_factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_12__[\"createAudioNodeConstructor\"])(cacheTestResult, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"], _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_49__[\"createInvalidAccessError\"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], Object(_factories_detect_cycles__WEBPACK_IMPORTED_MODULE_36__[\"createDetectCycles\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_PARAM_AUDIO_NODE_STORE\"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_140__[\"getAudioNodeConnections\"], _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_141__[\"getValueForKey\"]), isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst noneAudioDestinationNodeConstructor = Object(_factories_none_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_101__[\"createNoneAudioDestinationNodeConstructor\"])(audioNodeConstructor);\nconst analyserNodeConstructor = Object(_factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_3__[\"createAnalyserNodeConstructor\"])(createAnalyserNodeRenderer, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"], createNativeAnalyserNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\n\nconst nativeAudioBufferConstructor = Object(_factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_69__[\"createNativeAudioBufferConstructor\"])(window);\nconst convertNumberToUnsignedLong = Object(_factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_28__[\"createConvertNumberToUnsignedLong\"])(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = Object(_factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_134__[\"createWrapAudioBufferCopyChannelMethods\"])(convertNumberToUnsignedLong, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"]);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = Object(_factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_135__[\"createWrapAudioBufferCopyChannelMethodsOutOfBounds\"])(convertNumberToUnsignedLong);\nconst wrapAudioBufferCopyChannelMethodsSubarray = Object(_factories_wrap_audio_buffer_copy_channel_methods_subarray__WEBPACK_IMPORTED_MODULE_136__[\"createWrapAudioBufferCopyChannelMethodsSubarray\"])(convertNumberToUnsignedLong, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"]);\nconst audioBufferConstructor = Object(_factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_5__[\"createAudioBufferConstructor\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_BUFFER_STORE\"], cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, Object(_factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_113__[\"createTestAudioBufferConstructorSupport\"])(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray);\n\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = Object(_factories_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_120__[\"createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport\"])(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = Object(_factories_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_121__[\"createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport\"])(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = Object(_factories_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_122__[\"createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport\"])(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = Object(_factories_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_137__[\"createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls\"])(createNativeAudioNode);\nconst createNativeAudioBufferSourceNode = Object(_factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_70__[\"createNativeAudioBufferSourceNodeFactory\"])(cacheTestResult, createNativeAudioNode, Object(_factories_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_114__[\"createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport\"])(createNativeAudioNode), Object(_factories_test_audio_buffer_source_node_start_method_duration_parameter_support__WEBPACK_IMPORTED_MODULE_115__[\"createTestAudioBufferSourceNodeStartMethodDurationParameterSupport\"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_116__[\"createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport\"])(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_146__[\"wrapAudioBufferSourceNodeStartMethodOffsetClamping\"], wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createAudioBufferSourceNodeRenderer = Object(_factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_7__[\"createAudioBufferSourceNodeRendererFactory\"])(createNativeAudioBufferSourceNode);\nconst createAudioParam = Object(_factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_13__[\"createAudioParamFactory\"])(_factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_14__[\"createAudioParamRenderer\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createCancelAndHoldAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createCancelScheduledValuesAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createExponentialRampToValueAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createLinearRampToValueAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createSetTargetAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createSetValueAutomationEvent\"], automation_events__WEBPACK_IMPORTED_MODULE_0__[\"createSetValueCurveAutomationEvent\"], nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = Object(_factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_6__[\"createAudioBufferSourceNodeConstructor\"])(createAudioBufferSourceNodeRenderer, createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioBufferSourceNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\n\nconst audioDestinationNodeConstructor = Object(_factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_9__[\"createAudioDestinationNodeConstructor\"])(audioNodeConstructor, _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_10__[\"createAudioDestinationNodeRenderer\"], _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], _factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_72__[\"createNativeAudioDestinationNode\"], isNativeOfflineAudioContext);\nconst createNativeBiquadFilterNode = Object(_factories_native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_77__[\"createNativeBiquadFilterNodeFactory\"])(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = Object(_factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_19__[\"createBiquadFilterNodeRendererFactory\"])(createNativeBiquadFilterNode);\nconst biquadFilterNodeConstructor = Object(_factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_18__[\"createBiquadFilterNodeConstructor\"])(createAudioParam, createBiquadFilterNodeRenderer, _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_49__[\"createInvalidAccessError\"], createNativeBiquadFilterNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst wrapChannelMergerNode = Object(_factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_138__[\"createWrapChannelMergerNode\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode);\nconst createNativeChannelMergerNode = Object(_factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_78__[\"createNativeChannelMergerNodeFactory\"])(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = Object(_factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_22__[\"createChannelMergerNodeRendererFactory\"])(createNativeChannelMergerNode);\nconst channelMergerNodeConstructor = Object(_factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_21__[\"createChannelMergerNodeConstructor\"])(createChannelMergerNodeRenderer, createNativeChannelMergerNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeChannelSplitterNode = Object(_factories_native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_79__[\"createNativeChannelSplitterNodeFactory\"])(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = Object(_factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_24__[\"createChannelSplitterNodeRendererFactory\"])(createNativeChannelSplitterNode);\nconst channelSplitterNodeConstructor = Object(_factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_23__[\"createChannelSplitterNodeConstructor\"])(createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeGainNode = Object(_factories_native_gain_node_factory__WEBPACK_IMPORTED_MODULE_85__[\"createNativeGainNodeFactory\"])(createNativeAudioNode);\nconst createNativeConstantSourceNodeFaker = Object(_factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_81__[\"createNativeConstantSourceNodeFakerFactory\"])(createNativeAudioBufferSourceNode, createNativeGainNode);\nconst createNativeConstantSourceNode = Object(_factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_80__[\"createNativeConstantSourceNodeFactory\"])(cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = Object(_factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_27__[\"createConstantSourceNodeRendererFactory\"])(createNativeConstantSourceNode);\nconst constantSourceNodeConstructor = Object(_factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_26__[\"createConstantSourceNodeConstructor\"])(createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeConvolverNode = Object(_factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_82__[\"createNativeConvolverNodeFactory\"])(createNativeAudioNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst createConvolverNodeRenderer = Object(_factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_30__[\"createConvolverNodeRendererFactory\"])(createNativeConvolverNode);\nconst convolverNodeConstructor = Object(_factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_29__[\"createConvolverNodeConstructor\"])(createConvolverNodeRenderer, createNativeConvolverNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeDelayNode = Object(_factories_native_delay_node_factory__WEBPACK_IMPORTED_MODULE_83__[\"createNativeDelayNodeFactory\"])(createNativeAudioNode);\nconst createDelayNodeRenderer = Object(_factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_35__[\"createDelayNodeRendererFactory\"])(createNativeDelayNode);\nconst delayNodeConstructor = Object(_factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_34__[\"createDelayNodeConstructor\"])(createAudioParam, createDelayNodeRenderer, createNativeDelayNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeDynamicsCompressorNode = Object(_factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_84__[\"createNativeDynamicsCompressorNodeFactory\"])(createNativeAudioNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst createDynamicsCompressorNodeRenderer = Object(_factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__[\"createDynamicsCompressorNodeRendererFactory\"])(createNativeDynamicsCompressorNode);\nconst dynamicsCompressorNodeConstructor = Object(_factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_38__[\"createDynamicsCompressorNodeConstructor\"])(createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createGainNodeRenderer = Object(_factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_44__[\"createGainNodeRendererFactory\"])(createNativeGainNode);\nconst gainNodeConstructor = Object(_factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_43__[\"createGainNodeConstructor\"])(createAudioParam, createGainNodeRenderer, createNativeGainNode, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeScriptProcessorNode = Object(_factories_native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_96__[\"createNativeScriptProcessorNodeFactory\"])(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = Object(_factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_87__[\"createNativeIIRFilterNodeFakerFactory\"])(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_49__[\"createInvalidAccessError\"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst renderNativeOfflineAudioContext = Object(_factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_109__[\"createRenderNativeOfflineAudioContext\"])(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, Object(_factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_128__[\"createTestOfflineAudioContextCurrentTimeSupport\"])(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = Object(_factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_47__[\"createIIRFilterNodeRendererFactory\"])(createNativeAudioBufferSourceNode, createNativeAudioNode, nativeOfflineAudioContextConstructor, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = Object(_factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_86__[\"createNativeIIRFilterNodeFactory\"])(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = Object(_factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_46__[\"createIIRFilterNodeConstructor\"])(createNativeIIRFilterNode, createIIRFilterNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createAudioListener = Object(_factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_11__[\"createAudioListenerFactory\"])(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst minimalBaseAudioContextConstructor = Object(_factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_66__[\"createMinimalBaseAudioContextConstructor\"])(audioDestinationNodeConstructor, createAudioListener);\nconst createNativeOscillatorNode = Object(_factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_92__[\"createNativeOscillatorNodeFactory\"])(cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = Object(_factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_105__[\"createOscillatorNodeRendererFactory\"])(createNativeOscillatorNode);\nconst oscillatorNodeConstructor = Object(_factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_104__[\"createOscillatorNodeConstructor\"])(createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeOscillatorNode, createOscillatorNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeWaveShaperNodeFaker = Object(_factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_100__[\"createNativeWaveShaperNodeFakerFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode, createNativeGainNode);\nconst createNativeWaveShaperNode = Object(_factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_99__[\"createNativeWaveShaperNodeFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode, createNativeWaveShaperNodeFaker);\nconst createNativePannerNodeFaker = Object(_factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_94__[\"createNativePannerNodeFakerFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst createNativePannerNode = Object(_factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_93__[\"createNativePannerNodeFactory\"])(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = Object(_factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_107__[\"createPannerNodeRendererFactory\"])(createNativePannerNode);\nconst pannerNodeConstructor = Object(_factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_106__[\"createPannerNodeConstructor\"])(createAudioParam, createNativePannerNode, createPannerNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativePeriodicWave = Object(_factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_95__[\"createNativePeriodicWaveFactory\"])(getBackupNativeContext);\nconst periodicWaveConstructor = Object(_factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_108__[\"createPeriodicWaveConstructor\"])(createNativePeriodicWave, _globals__WEBPACK_IMPORTED_MODULE_139__[\"PERIODIC_WAVE_STORE\"]);\nconst nativeStereoPannerNodeFakerFactory = Object(_factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_98__[\"createNativeStereoPannerNodeFakerFactory\"])(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst createNativeStereoPannerNode = Object(_factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_97__[\"createNativeStereoPannerNodeFactory\"])(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"]);\nconst createStereoPannerNodeRenderer = Object(_factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_112__[\"createStereoPannerNodeRendererFactory\"])(createNativeStereoPannerNode);\nconst stereoPannerNodeConstructor = Object(_factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_111__[\"createStereoPannerNodeConstructor\"])(createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createWaveShaperNodeRenderer = Object(_factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_132__[\"createWaveShaperNodeRendererFactory\"])(createNativeWaveShaperNode);\nconst waveShaperNodeConstructor = Object(_factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_131__[\"createWaveShaperNodeConstructor\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeWaveShaperNode, createWaveShaperNodeRenderer, isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst isSecureContext = Object(_factories_is_secure_context__WEBPACK_IMPORTED_MODULE_60__[\"createIsSecureContext\"])(window);\nconst exposeCurrentFrameAndCurrentTime = Object(_factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_41__[\"createExposeCurrentFrameAndCurrentTime\"])(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nconst addAudioWorkletModule = (isSecureContext) ?\n    Object(_factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_2__[\"createAddAudioWorkletModule\"])(_factories_abort_error__WEBPACK_IMPORTED_MODULE_1__[\"createAbortError\"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], exposeCurrentFrameAndCurrentTime, Object(_factories_fetch_source__WEBPACK_IMPORTED_MODULE_42__[\"createFetchSource\"])(_factories_abort_error__WEBPACK_IMPORTED_MODULE_1__[\"createAbortError\"]), getBackupNativeContext, new WeakMap(), new WeakMap()) :\n    undefined;\nconst isNativeAudioContext = Object(_factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_55__[\"createIsNativeAudioContext\"])(nativeAudioContextConstructor);\nconst isNativeContext = Object(_factories_is_native_context__WEBPACK_IMPORTED_MODULE_58__[\"createIsNativeContext\"])(isNativeAudioContext, isNativeOfflineAudioContext);\nconst decodeAudioData = Object(_factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_33__[\"createDecodeAudioData\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_BUFFER_STORE\"], cacheTestResult, _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_32__[\"createDataCloneError\"], _factories_encoding_error__WEBPACK_IMPORTED_MODULE_40__[\"createEncodingError\"], nativeOfflineAudioContextConstructor, isNativeContext, isNativeOfflineAudioContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_142__[\"testAudioBufferCopyChannelMethodsOutOfBoundsSupport\"], _helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_143__[\"testAudioBufferCopyChannelMethodsSubarraySupport\"], _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_144__[\"testPromiseSupport\"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray);\nconst baseAudioContextConstructor = Object(_factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_17__[\"createBaseAudioContextConstructor\"])(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = Object(_factories_native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_88__[\"createNativeMediaElementAudioSourceNodeFactory\"])(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = Object(_factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_62__[\"createMediaElementAudioSourceNodeConstructor\"])(createNativeMediaElementAudioSourceNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeMediaStreamAudioSourceNode = Object(_factories_native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_89__[\"createNativeMediaStreamAudioSourceNodeFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = Object(_factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_63__[\"createMediaStreamAudioSourceNodeConstructor\"])(createNativeMediaStreamAudioSourceNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst createNativeMediaStreamTrackAudioSourceNode = Object(_factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_90__[\"createNativeMediaStreamTrackAudioSourceNodeFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode);\nconst mediaStreamTrackAudioSourceNodeConstructor = Object(_factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_64__[\"createMediaStreamTrackAudioSourceNodeConstructor\"])(createNativeMediaStreamTrackAudioSourceNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], isNativeOfflineAudioContext, noneAudioDestinationNodeConstructor);\nconst audioContextConstructor = Object(_factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_8__[\"createAudioContextConstructor\"])(baseAudioContextConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_130__[\"createUnknownError\"], mediaElementAudioSourceNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\n\nconst connectMultipleOutputs = Object(_factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_25__[\"createConnectMultipleOutputs\"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"]);\nconst disconnectMultipleOutputs = Object(_factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_37__[\"createDisconnectMultipleOutputs\"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"]);\nconst createNativeAudioWorkletNodeFaker = Object(_factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_76__[\"createNativeAudioWorkletNodeFakerFactory\"])(connectMultipleOutputs, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_48__[\"createIndexSizeError\"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime);\nconst createNativeAudioWorkletNode = Object(_factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_75__[\"createNativeAudioWorkletNodeFactory\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeAudioNode, createNativeAudioWorkletNodeFaker, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], isNativeOfflineAudioContext);\nconst nativeAudioWorkletNodeConstructor = Object(_factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_74__[\"createNativeAudioWorkletNodeConstructor\"])(window);\nconst createAudioWorkletNodeRenderer = Object(_factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_16__[\"createAudioWorkletNodeRendererFactory\"])(connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, disconnectMultipleOutputs, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderNativeOfflineAudioContext);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = (isSecureContext) ?\n    Object(_factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_15__[\"createAudioWorkletNodeConstructor\"])(createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, gainNodeConstructor, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, noneAudioDestinationNodeConstructor) :\n    undefined;\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst minimalAudioContextConstructor = Object(_factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_65__[\"createMinimalAudioContextConstructor\"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_130__[\"createUnknownError\"], minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\n\nconst createNativeOfflineAudioContext = Object(_factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_31__[\"createCreateNativeOfflineAudioContext\"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_102__[\"createNotSupportedError\"], nativeOfflineAudioContextConstructor);\nconst startRendering = Object(_factories_start_rendering__WEBPACK_IMPORTED_MODULE_110__[\"createStartRendering\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_BUFFER_STORE\"], cacheTestResult, renderNativeOfflineAudioContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_142__[\"testAudioBufferCopyChannelMethodsOutOfBoundsSupport\"], _helpers_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_143__[\"testAudioBufferCopyChannelMethodsSubarraySupport\"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds, wrapAudioBufferCopyChannelMethodsSubarray);\nconst minimalOfflineAudioContextConstructor = Object(_factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__[\"createMinimalOfflineAudioContextConstructor\"])(cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\n\nconst offlineAudioContextConstructor = Object(_factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_103__[\"createOfflineAudioContextConstructor\"])(baseAudioContextConstructor, cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_50__[\"createInvalidStateError\"], createNativeOfflineAudioContext, startRendering);\n\n\n\n\n\n\nconst isAnyAudioContext = Object(_factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_51__[\"createIsAnyAudioContext\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"CONTEXT_STORE\"], isNativeAudioContext);\nconst isAnyAudioNode = Object(_factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_52__[\"createIsAnyAudioNode\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_NODE_STORE\"], isNativeAudioNode);\nconst isAnyAudioParam = Object(_factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_53__[\"createIsAnyAudioParam\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"AUDIO_PARAM_STORE\"], isNativeAudioParam);\nconst isAnyOfflineAudioContext = Object(_factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_54__[\"createIsAnyOfflineAudioContext\"])(_globals__WEBPACK_IMPORTED_MODULE_139__[\"CONTEXT_STORE\"], isNativeOfflineAudioContext);\nconst isSupported = () => Object(_factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_61__[\"createIsSupportedPromise\"])(cacheTestResult, Object(_factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_117__[\"createTestAudioContextCloseMethodSupport\"])(nativeAudioContextConstructor), Object(_factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_118__[\"createTestAudioContextDecodeAudioDataMethodTypeErrorSupport\"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_119__[\"createTestAudioContextOptionsSupport\"])(nativeAudioContextConstructor), Object(_factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_123__[\"createTestAudioWorkletProcessorNoOutputsSupport\"])(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), Object(_factories_test_channel_splitter_node_channel_count_support__WEBPACK_IMPORTED_MODULE_124__[\"createTestChannelSplitterNodeChannelCountSupport\"])(nativeOfflineAudioContextConstructor), Object(_factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_125__[\"createTestConstantSourceNodeAccurateSchedulingSupport\"])(createNativeAudioNode, nativeOfflineAudioContextConstructor), Object(_factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_126__[\"createTestConvolverNodeBufferReassignabilitySupport\"])(nativeOfflineAudioContextConstructor), Object(_factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_127__[\"createTestIsSecureContextSupport\"])(window), Object(_factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_129__[\"createTestStereoPannerNodeDefaultValueSupport\"])(nativeOfflineAudioContextConstructor), _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_145__[\"testTransferablesSupport\"]);\n//# sourceMappingURL=/build/es2018/module.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/module.js?");

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2018/read-only-map.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2018/read-only-map.js ***!
  \*******************************************************************************/
/*! exports provided: ReadOnlyMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReadOnlyMap\", function() { return ReadOnlyMap; });\nclass ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=/build/es2018/read-only-map.js.map\n\n//# sourceURL=webpack:///./node_modules/standardized-audio-context/build/es2018/read-only-map.js?");

/***/ }),

/***/ "./node_modules/web-audio-beat-detector-broker/build/es2018/helpers/render.js":
/*!************************************************************************************!*\
  !*** ./node_modules/web-audio-beat-detector-broker/build/es2018/helpers/render.js ***!
  \************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/module.js\");\n\nconst render = (audioBuffer, offset, duration) => {\n    const offlineAudioContext = new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__[\"OfflineAudioContext\"](audioBuffer.numberOfChannels, duration * audioBuffer.sampleRate, audioBuffer.sampleRate);\n    const biquadFilter = offlineAudioContext.createBiquadFilter();\n    const bufferSourceNode = offlineAudioContext.createBufferSource();\n    biquadFilter.frequency.value = 240;\n    biquadFilter.type = 'lowpass';\n    bufferSourceNode.buffer = audioBuffer;\n    bufferSourceNode\n        .connect(biquadFilter)\n        .connect(offlineAudioContext.destination);\n    bufferSourceNode.start(0, offset, duration);\n    return offlineAudioContext\n        .startRendering()\n        .then((renderedBuffer) => {\n        const channelData = renderedBuffer.getChannelData(0);\n        const sampleRate = renderedBuffer.sampleRate;\n        return { channelData, sampleRate };\n    });\n};\n//# sourceMappingURL=/build/es2018/helpers/render.js.map\n\n//# sourceURL=webpack:///./node_modules/web-audio-beat-detector-broker/build/es2018/helpers/render.js?");

/***/ }),

/***/ "./node_modules/web-audio-beat-detector-broker/build/es2018/module.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web-audio-beat-detector-broker/build/es2018/module.js ***!
  \****************************************************************************/
/*! exports provided: isSupported, load */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"load\", function() { return load; });\n/* harmony import */ var fast_unique_numbers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fast-unique-numbers */ \"./node_modules/fast-unique-numbers/build/es5/bundle.js\");\n/* harmony import */ var fast_unique_numbers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fast_unique_numbers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! standardized-audio-context */ \"./node_modules/standardized-audio-context/build/es2018/module.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSupported\", function() { return standardized_audio_context__WEBPACK_IMPORTED_MODULE_1__[\"isSupported\"]; });\n\n/* harmony import */ var _helpers_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/render */ \"./node_modules/web-audio-beat-detector-broker/build/es2018/helpers/render.js\");\n\n\n\n\nconst load = (url) => {\n    const worker = new Worker(url);\n    const ongoingRecordingRequests = new Set();\n    const analyze = (audioBuffer, offset = 0, duration = audioBuffer.duration - offset) => {\n        return new Promise(async (resolve, reject) => {\n            const { channelData, sampleRate } = await Object(_helpers_render__WEBPACK_IMPORTED_MODULE_2__[\"render\"])(audioBuffer, offset, duration);\n            const id = Object(fast_unique_numbers__WEBPACK_IMPORTED_MODULE_0__[\"addUniqueNumber\"])(ongoingRecordingRequests);\n            const onMessage = ({ data }) => {\n                if (data.id === id) {\n                    ongoingRecordingRequests.delete(id);\n                    worker.removeEventListener('message', onMessage);\n                    if (data.error === null) {\n                        resolve(data.result.tempo);\n                    }\n                    else {\n                        reject(new Error(data.error.message));\n                    }\n                }\n            };\n            worker.addEventListener('message', onMessage);\n            worker.postMessage({ id, method: 'analyze', params: { channelData, sampleRate } }, [channelData.buffer]);\n        });\n    };\n    const guess = (audioBuffer, offset = 0, duration = audioBuffer.duration - offset) => {\n        return new Promise(async (resolve, reject) => {\n            const { channelData, sampleRate } = await Object(_helpers_render__WEBPACK_IMPORTED_MODULE_2__[\"render\"])(audioBuffer, offset, duration);\n            const id = Object(fast_unique_numbers__WEBPACK_IMPORTED_MODULE_0__[\"addUniqueNumber\"])(ongoingRecordingRequests);\n            const onMessage = ({ data }) => {\n                if (data.id === id) {\n                    ongoingRecordingRequests.delete(id);\n                    worker.removeEventListener('message', onMessage);\n                    if (data.error === null) {\n                        resolve(data.result);\n                    }\n                    else {\n                        reject(new Error(data.error.message));\n                    }\n                }\n            };\n            worker.addEventListener('message', onMessage);\n            worker.postMessage({ id, method: 'guess', params: { channelData, sampleRate } }, [channelData.buffer]);\n        });\n    };\n    return {\n        analyze,\n        guess\n    };\n};\n//# sourceMappingURL=/build/es2018/module.js.map\n\n//# sourceURL=webpack:///./node_modules/web-audio-beat-detector-broker/build/es2018/module.js?");

/***/ }),

/***/ "./node_modules/web-audio-beat-detector/build/es2018/module.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web-audio-beat-detector/build/es2018/module.js ***!
  \*********************************************************************/
/*! exports provided: analyze, guess */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"analyze\", function() { return analyze; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"guess\", function() { return guess; });\n/* harmony import */ var web_audio_beat_detector_broker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-audio-beat-detector-broker */ \"./node_modules/web-audio-beat-detector-broker/build/es2018/module.js\");\n/* harmony import */ var _worker_worker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./worker/worker */ \"./node_modules/web-audio-beat-detector/build/es2018/worker/worker.js\");\n\n\nconst blob = new Blob([_worker_worker__WEBPACK_IMPORTED_MODULE_1__[\"worker\"]], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst webAudioBeatDetector = Object(web_audio_beat_detector_broker__WEBPACK_IMPORTED_MODULE_0__[\"load\"])(url);\nconst analyze = webAudioBeatDetector.analyze;\nconst guess = webAudioBeatDetector.guess;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=/build/es2018/module.js.map\n\n//# sourceURL=webpack:///./node_modules/web-audio-beat-detector/build/es2018/module.js?");

/***/ }),

/***/ "./node_modules/web-audio-beat-detector/build/es2018/worker/worker.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web-audio-beat-detector/build/es2018/worker/worker.js ***!
  \****************************************************************************/
/*! exports provided: worker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"worker\", function() { return worker; });\n// tslint:disable-next-line:max-line-length\nconst worker = `!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t);const r=(e,t,n)=>{const r=e.length,o=[];let s=!1;for(let a=0;a<r;a+=1)e[a]>t?s=!0:s&&(s=!1,o.push(a-1),a+=n/4-1);return s&&o.push(r-1),o},o=(e,t)=>{const n=(e=>{let t=0;const n=e.length;for(let r=0;r<n;r+=1)e[r]>t&&(t=e[r]);return t})(e),o=.3*n;let s=[],a=n-.05*n;if(n>.25)for(;s.length<30&&a>=o;)s=r(e,a,t),a-=.05*n;const l=((e,t)=>{const n=[];return e.forEach(e=>{let r=60/(e.interval/t);for(;r<90;)r*=2;for(;r>180;)r/=2;let o=!1,s=e.peaks.length;n.forEach(t=>{if(t.tempo===r&&(t.score+=e.peaks.length,t.peaks=[...t.peaks,...e.peaks],o=!0),t.tempo>r-.5&&t.tempo<r+.5){const n=2*Math.abs(t.tempo-r);s+=(1-n)*t.peaks.length,t.score+=(1-n)*e.peaks.length}}),o||n.push({peaks:e.peaks,score:s,tempo:r})}),n})((e=>{const t=[];return e.forEach((n,r)=>{const o=Math.min(e.length-r,10);for(let s=1;s<o;s+=1){const o=e[r+s]-n;t.some(e=>e.interval===o&&(e.peaks.push(n),!0))||t.push({interval:o,peaks:[n]})}}),t})(s),t);return l.sort((e,t)=>t.score-e.score),l};addEventListener(\"message\",e=>{let{data:t}=e;try{if(\"analyze\"===t.method){const{id:e,params:{channelData:n,sampleRate:r}}=t,s=((e,t)=>{const n=o(e,t);if(0===n.length)throw new Error(\"The given channelData does not contain any detectable beats.\");return n[0].tempo})(n,r);postMessage({error:null,id:e,result:{tempo:s}})}else{if(\"guess\"!==t.method)throw new Error('The given method \"'.concat(t.method,'\" is not supported'));{const{id:e,params:{channelData:n,sampleRate:r}}=t,{bpm:s,offset:a}=((e,t)=>{const n=o(e,t);if(0===n.length)throw new Error(\"The given channelData does not contain any detectable beats.\");const{peaks:r,tempo:s}=n[0],a=Math.round(s),l=60/a;r.sort((e,t)=>e-t);let c=r[0]/t;for(;c>l;)c-=l;return{bpm:a,offset:c}})(n,r);postMessage({error:null,id:e,result:{bpm:s,offset:a}})}}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}})}]);`;\n//# sourceMappingURL=/build/es2018/worker/worker.js.map\n\n//# sourceURL=webpack:///./node_modules/web-audio-beat-detector/build/es2018/worker/worker.js?");

/***/ }),

/***/ "./src/arrow.js":
/*!**********************!*\
  !*** ./src/arrow.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Arrow; });\nclass Arrow {\n  constructor (color, type, coords, rgbColors, game) {\n    this.color = color;\n    this.type = type;\n    this.coords = coords;\n    this.rgbColors = rgbColors;\n    this.game = game;\n    this.start = this.coords[this.type].x;\n    this.horiHeight = 50;\n    this.vertHeight = 20;\n  }\n\n  draw(ctx) {\n    switch(this.type) {\n      case \"left\":\n        ctx.beginPath();\n        ctx.fillStyle = this.rgbColors[this.color];\n        ctx.moveTo(this.start, this.horiHeight);\n        ctx.lineTo(this.start + 54, this.horiHeight - 32);\n        ctx.lineTo(this.start + 35, this.horiHeight);\n        ctx.lineTo(this.start + 54, this.horiHeight + 32);\n        ctx.closePath();\n        ctx.fill();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"rgb(255, 255, 255)\";\n        ctx.stroke();\n        break;\n      case \"up\":\n        ctx.beginPath();\n        ctx.fillStyle = this.rgbColors[this.color];\n        ctx.moveTo(this.start + 37, this.vertHeight);\n        ctx.lineTo(this.start + 5, this.vertHeight + 54);\n        ctx.lineTo(this.start + 37, this.vertHeight + 35);\n        ctx.lineTo(this.start + 70, this.vertHeight + 54);\n        ctx.closePath();\n        ctx.fill();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"rgb(255, 255, 255)\";\n        ctx.stroke();\n        break;\n      case \"down\":\n        ctx.beginPath();\n        ctx.fillStyle = this.rgbColors[this.color];\n        ctx.moveTo(this.start + 37, this.vertHeight + 54);\n        ctx.lineTo(this.start + 5, this.vertHeight);\n        ctx.lineTo(this.start + 37, this.vertHeight + 20);\n        ctx.lineTo(this.start + 70, this.vertHeight);\n        ctx.closePath();\n        ctx.fill();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"rgb(255, 255, 255)\";\n        ctx.stroke();\n        break;\n      case \"right\":\n        ctx.beginPath();\n        ctx.fillStyle = this.rgbColors[this.color];\n        ctx.moveTo(this.start + 73, this.horiHeight);\n        ctx.lineTo(this.start + 19, this.horiHeight - 32);\n        ctx.lineTo(this.start + 40, this.horiHeight);\n        ctx.lineTo(this.start + 19, this.horiHeight + 32);\n        ctx.closePath();\n        ctx.fill();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"rgb(255, 255, 255)\";\n        ctx.stroke();\n        break;\n    }\n  }\n\n  move(deltaTime) {\n    if (!deltaTime) return;\n    this.horiHeight += 50 / deltaTime;\n    this.vertHeight += 50 / deltaTime;\n\n    if (this.horiHeight > 750 || this.vertHeight > 750) {\n      this.remove(this);\n      this.game.missed();\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n\n}\n\n//# sourceURL=webpack:///./src/arrow.js?");

/***/ }),

/***/ "./src/effects.js":
/*!************************!*\
  !*** ./src/effects.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Effects; });\nclass Effects {\n  constructor() {\n    this.message = {\n      effect: false,\n      counter: 0\n    };\n    this.missed = {\n      effect: false,\n      counter: 0\n    };\n    this.hit = {\n      effect: false,\n      counter: 0\n    };\n  }\n\n  checkCounter(obj) {\n    if (obj.counter > 2) {\n      obj.counter = 0;\n      obj.effect = false;\n    } else {\n      obj.counter += 1;\n    }\n  }\n\n  changeMessage(message) {\n    this.message.effect = message;\n  }\n\n  changeHit(target) {\n    this.hit.effect = target;\n  }\n\n  toggleMiss() {\n    if (this.missed.effect) {\n      this.missed.effect = false;\n    } else {\n      this.missed.effect = true;\n    }\n  }\n\n  draw(ctx) {\n    if (this.message.effect) {\n      ctx.font = \"30px Varela Round\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(this.message.effect, 130, 225);\n      this.checkCounter(this.message);\n    }\n    if (this.missed.effect) {\n      ctx.font = \"30px Varela Round\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(this.missed.effect, 130, 225);\n      this.checkCounter(this.missed);\n    }\n    if (this.hit.effect) {\n      // Draw circle\n      this.checkCounter(this.hit);\n    }\n \n  }\n}\n\n//# sourceURL=webpack:///./src/effects.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _static_arrow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static_arrow */ \"./src/static_arrow.js\");\n/* harmony import */ var _arrow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arrow */ \"./src/arrow.js\");\n/* harmony import */ var _music__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./music */ \"./src/music.js\");\n/* harmony import */ var _effects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./effects */ \"./src/effects.js\");\n\n\n\n\n\nconst STATE = {\n  START: 0,\n  PLAYING: 1,\n  PAUSED: 2,\n  GAMEOVER: 3,\n};\n\nclass Game {\n  constructor(gameSet) {\n    this.gameSet = gameSet;\n    this.arrows = []\n    this.staticArrows = new _static_arrow__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Game.ARROW_COORDS, this);\n    // this.effects = new Effects();\n    // this.music = new Music(1, this);\n    this.gamestate = STATE.START;\n    this.start()\n  }\n\n  start() {\n    this.score = document.getElementById('score');\n    this.currentScore = 0;\n    this.score.innerHTML = this.currentScore;\n    this.miss = false;\n  }\n\n  addArrows() {\n    // debugger;\n    setInterval(() => {\n      if (this.gamestate !== STATE.PLAYING || this.gamestate === STATE.GAMEOVER) return;\n      this.createArrow();\n    }, 900)\n\n  }  \n\n  createArrow() {\n    let type = Game.ARROWS[Math.floor(Math.random()*4)];\n    let color = Game.COLORS[Math.floor(Math.random()*1)];\n    let arrow = new _arrow__WEBPACK_IMPORTED_MODULE_1__[\"default\"](color, type, Game.ARROW_COORDS, Game.COLORS_RGB, this);\n\n    this.arrows.push(arrow);\n  }\n\n  missed() {\n    this.miss = !this.miss\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, 625, 650);\n\n    this.allObjects().forEach(obj => {\n      obj.draw(ctx);\n    });\n\n    if (this.gamestate === STATE.START) {\n      ctx.font = \"30px Mitr\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(\"Press SPACEBAR to start\", 130, 225);\n      return;\n    } \n\n    let image;\n    if (this.miss) {\n      image = document.getElementById('miss-arrow');\n      // this.miss = !this.miss;\n    } else {\n      image = document.getElementById('arrow');\n    }\n    ctx.drawImage(image, 295, 225, 75, 75);\n\n  }\n\n  allObjects() {\n    return this.arrows.concat(this.staticArrows, this.effects)\n  }\n\n  checkTarget(arrowType, keys) {\n    switch (arrowType) {\n      case \"left\":\n        this.arrows.forEach(arrow => {\n          if ((arrow.start === Game.ARROW_COORDS.left.x) &&\n              (arrow.horiHeight > 540 && arrow.horiHeight < 635) &&\n              (keys[Game.CKC[arrow.color]] === true)) {\n                this.remove(arrow);\n                this.updateScore(arrow.horiHeight - 540);\n          } \n        });\n        break;\n      case \"up\":\n        this.arrows.forEach(arrow => {\n          if ((arrow.start === Game.ARROW_COORDS.up.x) &&\n              (arrow.vertHeight > 510 && arrow.vertHeight < 600) &&\n              (keys[Game.CKC[arrow.color]] === true)) {\n                this.remove(arrow);\n                this.updateScore(arrow.horiHeight - 535);\n          } \n        });\n        break;\n      case \"down\":\n        this.arrows.forEach(arrow => {\n          if ((arrow.start === Game.ARROW_COORDS.down.x) &&\n              (arrow.vertHeight > 515 && arrow.vertHeight < 610) && \n              (keys[Game.CKC[arrow.color]] === true)) {\n                this.remove(arrow);\n                this.updateScore(arrow.vertHeight - 520);\n          } \n        });\n        break;\n      case \"right\":\n        this.arrows.forEach(arrow => {\n          if ((arrow.start === Game.ARROW_COORDS.right.x) &&\n              (arrow.horiHeight > 540 && arrow.horiHeight < 635) &&\n              (keys[Game.CKC[arrow.color]] === true)) {\n                this.remove(arrow);\n                this.updateScore(arrow.horiHeight - 540);\n          } \n        });\n        break;\n    }\n  }\n\n  updateScore(accuracy) {\n    if (accuracy > 45 && accuracy < 55){\n      this.currentScore += 100;\n    } else if (accuracy > 30 && accuracy < 70) {\n      this.currentScore += 75;\n    } else {\n      this.currentScore += 50;\n    }\n    this.score.innerHTML = this.currentScore;\n  }\n\n  moveObjects(delta) {\n    if (this.gamestate !== STATE.PLAYING && this.gamestate !== STATE.GAMEOVER) return;\n    this.arrows.forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  remove(object) {\n    this.arrows.splice(this.arrows.indexOf(object), 1);\n  }\n\n  pause() {\n    // debugger\n    if (this.gamestate != STATE.PLAYING) {\n      this.gamestate = STATE.PLAYING;\n    } else {\n      this.gamestate = STATE.PAUSED;\n    }\n  }\n\n  gameover() {\n    this.gamestate = STATE.GAMEOVER;\n  }\n}\n\n\nGame.DIMS = {\n  x: 600,\n  y: 650\n}\nGame.COLORS = ['blue', 'purple', 'navy'];\nGame.ARROWS = ['left', 'up', 'down', 'right'];\nGame.ARROW_COORDS = {\n  \"left\" : {\n    x: 50,\n    y: 550\n  },\n  \"up\" : {\n    x: 200,\n    y: 550\n  },\n  \"down\" : {\n    x: 350,\n    y: 550\n  },\n  \"right\" : {\n    x: 500,\n    y: 550\n  }\n}\nGame.COLORS_RGB = {\n  'blue': 'rgb(138, 241, 234',\n  'purple': 'rgb(221, 162, 246)',\n  'navy': 'rgb(127, 179, 225)'\n} \n\nGame.CKC = {\n  'blue': 67,\n  'purple': 88,\n  'navy': 90\n} \n\nGame.difficulty = {\n  'hard': {\n    interval: 500,\n    speed: 90\n  },\n  'medium': {\n    interval: 700,\n    speed: 70\n  },\n  'easy': {\n    interval: 900,\n    speed: 50\n  }\n}\n\n\n//# sourceURL=webpack:///./src/game.js?");

/***/ }),

/***/ "./src/game_view.js":
/*!**************************!*\
  !*** ./src/game_view.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Gameview; });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/game.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./input */ \"./src/input.js\");\n\n\n\n\n\nclass Gameview {\n  constructor(ctx) {\n    this.ctx = ctx;\n\n    // this.menu = new Menu()\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](1);\n    new _input__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game.staticArrows, this.game);\n    this.lastTime = 0;\n  }\n\n  start() {\n    this.game.draw(this.ctx);\n    this.game.addArrows();\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  \n  animate(time) {\n    let delta = time - this.lastTime;\n    \n    this.game.moveObjects(delta);\n    this.game.draw(this.ctx)\n\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n\n\n}\n\n//# sourceURL=webpack:///./src/game_view.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game_view */ \"./src/game_view.js\");\n// Entry File\n\nconsole.log(\"webpack is working??\")\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  changeVideo();  \n\n  let canvas = document.getElementById(\"game-canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let ccr = new _game_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n  ccr.start();\n  window.ctx = ctx;\n  window.ccr = ccr;\n});\n\nfunction changeVideo() {\n  let video = document.getElementById('bg-vid');\n  let source = document.createElement('source');\n  source.setAttribute('src', \"file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/videos/yellow-lights.mp4\");\n  video.appendChild(source);\n\n  document.getElementById('change-bg').onclick = function changeVid() {\n    video.pause();\n    if (video.children[0].src.includes(\"yellow\")) {\n      source.setAttribute('src', \"file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/videos/purple-wave.mp4\");\n    } else {\n      source.setAttribute('src', \"file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/videos/yellow-lights.mp4\");\n    }\n    video.load();\n    video.play();\n  }\n}\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/input.js":
/*!**********************!*\
  !*** ./src/input.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return InputHandler; });\nclass InputHandler {\n  constructor(staticA, game) {\n    this.keys = {\n      67: false,\n      88: false,\n      90: false,\n    }\n    document.addEventListener(\"keydown\", event => {\n      switch (event.keyCode) {\n        case 188:\n          staticA.pressDown(\"left\");\n          if (this.keys[67] ^ this.keys[88] ^ this.keys[90]) {\n            game.checkTarget(\"left\", this.keys);\n          }\n          break; \n        case 76:\n          staticA.pressDown(\"up\");\n          if (this.keys[67] ^ this.keys[88] ^ this.keys[90]) {\n            game.checkTarget(\"up\", this.keys);\n          }\n          break; \n        case 190:\n          staticA.pressDown(\"down\");\n          if (this.keys[67] ^ this.keys[88] ^ this.keys[90]) {\n            game.checkTarget(\"down\", this.keys);\n          }\n          break; \n        case 191:\n          staticA.pressDown(\"right\");\n          if (this.keys[67] ^ this.keys[88] ^ this.keys[90]) {\n            game.checkTarget(\"right\", this.keys);\n          }\n          break;\n        case 67:\n          this.keys[67] = true;\n          staticA.pressDownColor(\"blue\");\n          staticA.changeCurrentColor('blue');\n          break;\n        case 88:\n          this.keys[88] = true;\n          staticA.pressDownColor(\"purple\");\n          staticA.changeCurrentColor('purple');\n          break;\n        case 90:\n          this.keys[90] = true;\n          staticA.pressDownColor(\"navy\");\n          staticA.changeCurrentColor('navy');\n          break;\n        case 32:\n          game.pause();\n          game.music.toggleSong()\n          break;\n      }\n    })\n    document.addEventListener(\"keyup\", event => {\n      switch (event.keyCode) {\n        case 188:\n          staticA.pressUp(\"left\");\n          break; \n        case 76:\n          staticA.pressUp(\"up\");\n          break; \n        case 190:\n          staticA.pressUp(\"down\");\n          break; \n        case 191:\n          staticA.pressUp(\"right\")\n          break; \n        case 67:\n          this.keys[67] = false;\n          staticA.changeCurrentColor(false);\n          staticA.pressUp(\"all\");\n          break;\n        case 88:\n          this.keys[88] = false;\n          staticA.changeCurrentColor(false);\n          staticA.pressUp(\"all\");\n          break;\n        case 90:\n          this.keys[90] = false;\n          staticA.changeCurrentColor(false);\n          staticA.pressUp(\"all\");\n          break;\n      }\n    })\n  }\n}\n\n//# sourceURL=webpack:///./src/input.js?");

/***/ }),

/***/ "./src/music.js":
/*!**********************!*\
  !*** ./src/music.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Music; });\n/* harmony import */ var web_audio_beat_detector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-audio-beat-detector */ \"./node_modules/web-audio-beat-detector/build/es2018/module.js\");\n\n\nclass Music {\n  constructor(songChoice, game) {\n    this.music = document.getElementById(\"audio\");\n    this.muteButton = document.getElementById('volume-button');\n\n    this.addSong();\n    \n    this.music.addEventListener(\"ended\", () => {\n      this.music.currentTime = 0;\n      game.gameover();\n    })\n\n    this.muteButton.onclick = function toggleMute() {\n      // debugger\n\n      if (!this.music.muted) {\n        this.muteButton.classList.remove(\"fa-volume-off\");\n        this.muteButton.classList.add(\"fa-volume-up\");\n        this.music.muted = true;\n      } else {\n        this.muteButton.classList.remove(\"fa-volume-up\");\n        this.muteButton.classList.add(\"fa-volume-off\");\n        this.music.muted = false;\n\n      }\n    }\n\n  }\n\n  addSong() {\n    let source = document.createElement('source');\n    source.setAttribute('src', Music.SONGS['Kill This Love - BLACKPINK']);\n    this.music.appendChild(source);\n    this.playing = false;\n  }\n\n  toggleSong() {\n    if (!this.playing) {\n      this.music.play();\n      this.playing = true;\n    } else {\n      this.music.pause();\n      this.playing = false;\n    }\n  }\n\n  // toggleMute() {\n  //   if (!this.music.muted) {\n  //     this.muteButton.classList.remove(\"fa-volume-off\");\n  //     this.muteButton.classList.add(\"fa-volume-up\");\n  //     this.music.muted = true;\n  //   } else {\n  //     this.muteButton.classList.remove(\"fa-volume-up\");\n  //     this.muteButton.classList.add(\"fa-volume-off\");\n  //     this.music.muted = false;\n\n  //   }\n  // }\n\n}\n\nMusic.SONGS = {\n  'BOOMBAYAH - BLACKPINK': 'file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/audio/boombayah.mp3',\n  'DDU-DU DDU-DU REMIX - BLACKPINK': 'file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/audio/ddd-remix.mp3',\n  'Kill This Love - BLACKPINK':'file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/audio/boombayah.mp3',\n  'Kiss and Make Up - Dua Lipa, BLACKPINK':'file:///Users/maryliang/Desktop/ColorCodeRevolution/assets/audio/boombayah.mp3',\n}\n\n\n\n\n// export default class Music {\n//   constructor(game) {\n//     window.AudioContext = window.AudioContext || window.webkitAudioContext;\n//     this.context = new AudioContext();\n//     this.analyzer = this.context.createAnalyser();\n\n//     this.analyzer.fftSize = 2048;\n//     this.bufferLength = this.analyzer.frequencyBinCount;\n//     this.dataArray = new Uint8Array(this.bufferLength);\n//     console.log(this.dataArray)\n\n//     this.game = game;\n//     this.songBuffer;\n\n//     document.addEventListener('click', () => {\n//       this.context.resume();\n//     })\n//     this.analyzer.getByteTimeDomainData(this.dataArray)\n//   }\n\n//   loadSong(url) {\n//     let request = new XMLHttpRequest();\n//     request.open('GET', url, true);\n\n//     request.responseType = 'arraybuffer';\n//     // debugger        \n//     request.onload = () => {\n//       this.context.decodeAudioData(request.response, (buffer) => {\n//         this.songBuffer = buffer;\n//         this.playSong(buffer);\n//       });\n//     }\n//     request.send();\n//   }\n\n//   // draw() {\n//   //   let drawVisual = requestAnimationFrame(this.draw.bind(this));\n\n//   //   this.analyzer.getByteTimeDomainData(this.dataArray);\n//   //   console.log(this.dataArray);\n//   // }\n\n//   playSong(buffer) {\n//     this.source = this.context.createBufferSource(); \n//     this.source.buffer = buffer;\n//     this.source.connect(this.context.destination);\n//     this.source.start(0);\n//     guess(buffer).then(({ bpm, offset }) => {\n//       console.log(bpm, offset);\n//     })\n//     console.log(this.dataArray)\n//     // for (let i = 0; i < 50; i++) {\n//     //   console.log(this.dataArray[i]);\n//     // }\n//     // this.draw();\n//   }\n// }\n\n//# sourceURL=webpack:///./src/music.js?");

/***/ }),

/***/ "./src/static_arrow.js":
/*!*****************************!*\
  !*** ./src/static_arrow.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return StaticArrow; });\nclass StaticArrow {\n  constructor(coords, game) {\n    this.coords = coords;\n\n    this.leftImage = document.getElementById(\"left-static-arrow\")\n    this.upImage = document.getElementById(\"up-static-arrow\")\n    this.downImage = document.getElementById(\"down-static-arrow\")\n    this.rightImage = document.getElementById(\"right-static-arrow\")\n\n    this.game = game;\n    this.currentColor = {color: false};\n  }\n\n  changeCurrentColor(color) {\n    this.currentColor.color = color;\n  }\n\n  pressDownColor(color) {\n    this.leftImage.src = `../assets/images/${color}-left-circle.png`;\n    this.upImage.src = `../assets/images/${color}-up-circle.png`;\n    this.downImage.src = `../assets/images/${color}-down-circle.png`;\n    this.rightImage.src = `../assets/images/${color}-right-circle.png`;\n  }\n\n  pressDown(arrow) {\n    switch (arrow) {\n      case \"left\":\n        this.leftImage.src = '../assets/images/empty.png';\n        break;\n      case \"up\":\n        this.upImage.src = '../assets/images/empty.png';\n        break;\n      case \"down\":\n        this.downImage.src = '../assets/images/empty.png';\n        break;\n      case \"right\":\n        this.rightImage.src = '../assets/images/empty.png';\n        break;\n    }\n  }\n\n  pressUp (arrow) {\n    if (this.currentColor.color) {\n      this.pressDownColor(this.currentColor.color);\n      return;\n    }\n    switch (arrow) {\n      case \"left\":\n        this.leftImage.src = '../assets/images/left-static-arrow.png';\n        break;\n      case \"up\":\n        this.upImage.src = '../assets/images/up-static-arrow.png';\n        break;\n      case \"down\":\n        this.downImage.src = '../assets/images/down-static-arrow.png';\n        break;\n      case \"right\":\n        this.rightImage.src = '../assets/images/right-static-arrow.png';\n        break;\n      case \"all\":\n        this.leftImage.src = '../assets/images/left-static-arrow.png';\n        this.upImage.src = '../assets/images/up-static-arrow.png';\n        this.downImage.src = '../assets/images/down-static-arrow.png';\n        this.rightImage.src = '../assets/images/right-static-arrow.png';\n        break;\n    }\n  }\n\n  draw(ctx) {\n    ctx.drawImage(this.leftImage, this.coords.left.x, this.coords.left.y, 75, 75);\n    ctx.drawImage(this.upImage, this.coords.up.x, this.coords.up.y, 75, 75);\n    ctx.drawImage(this.downImage, this.coords.down.x, this.coords.down.y, 75, 75);\n    ctx.drawImage(this.rightImage, this.coords.right.x, this.coords.right.y, 75, 75);\n  }\n}\n\n//# sourceURL=webpack:///./src/static_arrow.js?");

/***/ })

/******/ });